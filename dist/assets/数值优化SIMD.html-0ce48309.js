const e=JSON.parse('{"key":"v-7388c35c","path":"/en/train/eda/algorithm-data/Part_7_algorithm/7_3_math/%E6%95%B0%E5%80%BC%E4%BC%98%E5%8C%96SIMD.html","title":"7.3.5 数值优化SIMD","lang":"en-US","frontmatter":{"title":"7.3.5 数值优化SIMD","order":5},"headers":[{"level":2,"title":"1、概述","slug":"_1、概述","link":"#_1、概述","children":[]},{"level":2,"title":"2、简单使用","slug":"_2、简单使用","link":"#_2、简单使用","children":[{"level":3,"title":"2.1矢量加法","slug":"_2-1矢量加法","link":"#_2-1矢量加法","children":[]},{"level":3,"title":"2.2复数数组乘法","slug":"_2-2复数数组乘法","link":"#_2-2复数数组乘法","children":[]},{"level":3,"title":"2.3矩阵转置","slug":"_2-3矩阵转置","link":"#_2-3矩阵转置","children":[]},{"level":3,"title":"2.4线性同余生成伪随机数","slug":"_2-4线性同余生成伪随机数","link":"#_2-4线性同余生成伪随机数","children":[]}]}],"git":{"createdTime":1723131714000,"updatedTime":1723131714000,"contributors":[{"name":"Xingquan-Li","email":"fzulxq@gmail.com","commits":1}]},"readingTime":{"minutes":20.14,"words":6042},"filePathRelative":"en/train/eda/algorithm-data/Part_7_algorithm/7_3_math/数值优化SIMD.md","localizedDate":"August 8, 2024","excerpt":"<h1> 数值优化SIMD</h1>\\n<h2> 1、概述</h2>\\n<p>SIMD全称Single Instruction Multiple Data，单指令多数据流，能够读取多个操作数，并把它们打包在大型寄存器的一组指令集。一次获取多个操作数后，存放于一个大型寄存器，再进行运算，从而达到一条指令完成对多个对象计算的效果，实现加速。目前常见编译器对X86-64的CPU上128bit的SIMD计算支持比较好，基本对于大多简单的计算都可以做到使用SIMD做一个简单的优化，但是对于较为复杂的操作依旧需要手动编写相应的C/C++或者汇编代码。</p>\\n<p>Intel官网上SIMD指令使用的相关指南<br>\\n<a href=\\"https://links.jianshu.com/go?to=https%3A%2F%2Fsoftware.intel.com%2Fsites%2Flandingpage%2FIntrinsicsGuide%2F%23\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://software.intel.com/sites/landingpage/IntrinsicsGuide/#</a></p>","copyright":{"author":"iEDA","license":"GPL-3.0"}}');export{e as data};
