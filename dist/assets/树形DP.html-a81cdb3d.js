const i=JSON.parse('{"key":"v-3c4234f4","path":"/train/eda/algorithm-data/Part_7_algorithm/7_2_dynamic-programing/%E6%A0%91%E5%BD%A2DP.html","title":"7.2.3 树形DP","lang":"zh-CN","frontmatter":{"title":"7.2.3 树形DP","order":3},"headers":[{"level":3,"title":"没有上司的舞会","slug":"没有上司的舞会","link":"#没有上司的舞会","children":[]},{"level":3,"title":"树上子链","slug":"树上子链","link":"#树上子链","children":[]}],"git":{"createdTime":1721213548000,"updatedTime":1721225740000,"contributors":[{"name":"Xingquan-Li","email":"fzulxq@gmail.com","commits":1},{"name":"simintao","email":"simintao@126.com","commits":1}]},"readingTime":{"minutes":1.6,"words":479},"filePathRelative":"train/eda/algorithm-data/Part_7_algorithm/7_2_dynamic-programing/树形DP.md","localizedDate":"2024年7月17日","excerpt":"<p>求树上最长链（或者说树的直径、树上距离最远的两点距离，树中所有最短路径距离的最大值）</p>\\n<blockquote>\\n<p>1.树形DP（可以有效处理负边权）<br>\\n2.两次dfs或bfs（无法处理负边权）</p>\\n</blockquote>\\n<hr>\\n<h3> 没有上司的舞会</h3>\\n<div style=\\"text-align:center;\\">\\n  <img src=\\"/res/images/eda_algorithm/dynamic_programming/dp_19.jpg\\" alt=\\"ASIC Flow\\" width=\\"200\\">\\n  <h4>图1 没有上司的舞会</h4>\\n</div>","copyright":{"author":"iEDA","license":"GPL-3.0"}}');export{i as data};
