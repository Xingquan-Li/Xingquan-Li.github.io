import{_ as i,a as n,b as s,c as o,d as c}from"./sparecellPlacementICC-e447c8cd.js";import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as h,o as l,c as p,d as a,e,a as r,f as _}from"./app-1ed3f6c2.js";const f={},m=_('<p>旦芯片制造出来，如果在其中发现任何功能问题或需要在下一次制造中进行某些功能增强，那可真是个棘手的任务。不过，有了备用单元，这些改动可以变得轻而易举。</p><p>那么备用单元究竟是什么呢？简而言之，备用单元就是在设计中预先放置的一些类似DFF（触发器）、NAND、AND、XOR、INV（反相器）等的单元。它们并不执行任何逻辑操作，只是作为一种填充单元存在。</p><h2 id="备用单元" tabindex="-1"><a class="header-anchor" href="#备用单元" aria-hidden="true">#</a> 备用单元：</h2><p>备用单元通常由一组标准单元组成，其中包括反相器、缓冲器、NAND、NOR、与门、或门、异或门、多路复用器、触发器等等。</p><div style="text-align:center;"><img src="'+i+'" alt="ASIC Flow" width="300"></div><p>当然，也可能还有一些特殊设计的可配置备用单元。这些备用单元的输入通过绑定电源（VDD）或接地（VSS）的连接单元连接在一起，而输出则保持漂浮状态。这是为了避免漂浮的输入受到噪声的影响，从而导致不必要的开关动作和额外的功耗。下面显示了一组备用单元。</p><div style="text-align:center;"><img src="'+n+'" alt="ASIC Flow" width="300"></div><h2 id="备用单元的用途" tabindex="-1"><a class="header-anchor" href="#备用单元的用途" aria-hidden="true">#</a> 备用单元的用途：</h2><p>备用单元的主要作用是在需要修改或改进芯片功能时，通过最小化掩膜的更改来实现。我们可以利用已经预先放置的备用单元，只需修改金属互连，而无需改动基础层。通过进行金属ECO（Engineering Change Order，工程变更操作），我们可以修改互连金属连接并利用备用单元，而无需对基础层进行掩膜变更。这样一来，我们只需要更改少量金属的掩膜，而不必重新制造整个芯片。这不仅可以节省成本，还可以节省大量的时间。</p><div style="text-align:center;"><img src="'+s+'" alt="ASIC Flow" width="300"></div><p>例如，假设在上述电路中，我们需要将电路中间部分的最后一个OR门替换为一个EXOR或AND门，则可以仅通过金属ECO重新连接靠近此处的备用单元。</p><h2 id="备用单元的布局" tabindex="-1"><a class="header-anchor" href="#备用单元的布局" aria-hidden="true">#</a> 备用单元的布局：</h2><p>备用单元可以以网表形式或者使用PnR工具的命令（或者图形用户界面）来添加到设计中。在物理设计中，我们通常倾向于使用工具命令来添加备用单元。这些单元会在整个设计中的标准单元放置之前被添加。</p><p>比如说，在Innovus和ICC等工具中，我们可以使用相应的命令来添加备用单元。这样一来，备用单元就能够方便地被放置在设计中。</p><h3 id="innovus工具" tabindex="-1"><a class="header-anchor" href="#innovus工具" aria-hidden="true">#</a> Innovus工具：</h3><figure><img src="'+o+'" alt="alt text" tabindex="0"><figcaption>alt text</figcaption></figure><h3 id="icc工具" tabindex="-1"><a class="header-anchor" href="#icc工具" aria-hidden="true">#</a> ICC工具：</h3><figure><img src="'+c+'" alt="alt text" tabindex="0"><figcaption>alt text</figcaption></figure><h2 id="备用单元的优缺点" tabindex="-1"><a class="header-anchor" href="#备用单元的优缺点" aria-hidden="true">#</a> 备用单元的优缺点：</h2><p>备用单元的使用有诸多优点，但也有一些缺点。让我们先来看看它的优点：</p><p>首先，备用单元具有很好的重复利用性。因为我们只需更改少量的金属和透过掩膜，可以重复使用基础层掩膜，节省芯片制造成本。</p><p>其次，备用单元提供了极大的灵活性。我们可以轻松地对设计进行小的改动，而不必重新制造整个芯片。</p><p>此外，备用单元还可以节省成本和时间。对于新的设计项目，我们只需更改少量的互连掩膜，从而节省大量芯片制造成本。而使用金属ECO，我们无需进行完整的设计周期，从而节省了宝贵的设计时间。</p><p>当然，备用单元也存在一些缺点：</p><p>首先，备用单元的使用会增加设计中的漏电功耗。这是因为备用单元会增加一些不必要的开关动作，导致额外的功耗。</p><p>此外，备用单元会占用设计中的一定面积。这就意味着在设计中需要额外的空间来放置备用单元，可能会对整体的优化结果质量产生一定的影响。</p><p>综上所述，备用单元在物理设计中发挥着重要的作用。它们能够帮助我们解决芯片制造过程中的问题</p><h2 id="谢谢" tabindex="-1"><a class="header-anchor" href="#谢谢" aria-hidden="true">#</a> 谢谢</h2>',28),g={href:"https://teamvlsi.com/2020/08/spare-cells-in-physical-design.html",target:"_blank",rel:"noopener noreferrer"},u=a("br",null,null,-1),x={href:"https://blog.csdn.net/qq_21842097/article/details/121745578",target:"_blank",rel:"noopener noreferrer"};function b(v,C){const t=h("ExternalLinkIcon");return l(),p("div",null,[m,a("p",null,[e("[1] "),a("a",g,[e("https://teamvlsi.com/2020/08/spare-cells-in-physical-design.html"),r(t)]),u,e(" [2] "),a("a",x,[e("https://blog.csdn.net/qq_21842097/article/details/121745578"),r(t)])])])}const O=d(f,[["render",b],["__file","5_10_物理设计中的备用单元 .html.vue"]]);export{O as default};
