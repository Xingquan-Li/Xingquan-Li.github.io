import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as i,c,d as e,e as t,a,f as n}from"./app-1ed3f6c2.js";const h={},d=n('<h3 id="_1-问题背景" tabindex="-1"><a class="header-anchor" href="#_1-问题背景" aria-hidden="true">#</a> <strong>1 问题背景</strong></h3><p>线长预测时延是指在芯片设计过程中，利用EDA工具对连线的长度进行估计，并进一步预测信号传输的时延。不同信号线的长度会影响信号传输的时延。较长的信号线会导致信号传输所需的时间增加，从而可能导致时序问题和性能下降。因此，在Global Routing阶段的线长进行Detail routing阶段后的时延预测可以帮助评估和优化信号传输的性能。</p><p>线长预测时延通常通过以下步骤进行：</p><p>​ ● <strong>建立模型</strong>：使用EDA工具，基于芯片设计的物理布局信息和电路参数，建立信号传输时延的数学模型。这些模型通常考虑了电阻、电容、工艺因素等对信号传输的影响。</p><p>​ ● <strong>估计线长</strong>：根据物理布局信息和电路连接关系，通过EDA工具GR阶段估计各条互连线的长度，包括net的总长度以及每条net中从驱动到每个负载的长度。</p><p>​ ● <strong>计算时延</strong>：将GR估计的线长以及其他辅助特征代入模型，使用EDA工具计算DR阶段后信号传输的时延。这可以包括传播时延、电缆延迟、信号干扰等因素的综合考虑。</p><p>​ ● <strong>分析优化</strong>：根据预测的时延结果，进行信号完整性和时序分析。如果存在时序问题或性能不满足需求，则可以采取优化措施，如重新规划布局、调整驱动电流、修改时钟分配等。</p><h3 id="_2-问题描述" tabindex="-1"><a class="header-anchor" href="#_2-问题描述" aria-hidden="true">#</a> <strong>2 问题描述</strong></h3><p>对于给定的芯片布局和电路连接关系，需要估计各个信号线的长度，以及其他影响时延的因素，包括电容，电阻，slew等，并进一步预测信号传输的时延。</p><p>1、<strong>实现要求</strong>：遵循iEDA平台的模块划分，实现一个线长预测网络模型，完成功能：对给定的输入数据集进行划分，划分为训练集和测试集，并使用Pytorch进行数据预处理和读入，然后设计网络模型，对网络模型进行训练，设计损失函数，输出回归的预测结果并评估精度。</p><p><strong>2、解决线长预测时延问题的方法，通常包括以下步骤</strong>：</p><p>​ ● 根据芯片布局信息和电路连接关系，计算Global Routing阶段各个信号线的几何长度。这可以基于坐标差值或曼哈顿距离等方法进行估算。</p><p>​ ● 考虑电阻和电容等物理特性，结合工艺参数和实际电路模型，建立信号传输时延的数学模型。该模型可以考虑传播时延、电缆延迟、信号干扰等因素。通过内部iSTA工具获取每条net的物理特征和电学特征信息，将其与信号线长度一起作为时延预测模型的输入特征。</p><p>​ ● 运用EDA工具或自研算法，搭建机器学习模型或者神经网络模型，以及Global Routing阶段的线长，得到每条信号线在Detail Routing后的预测时延。</p><p>​ ● 对预测时延进行分析和评估，检查是否满足时序要求和性能目标。如果存在问题，可以通过调整布局、优化信号路径、修改驱动电流等手段来改善时延性能。</p><h3 id="_3-输入输出" tabindex="-1"><a class="header-anchor" href="#_3-输入输出" aria-hidden="true">#</a> <strong>3 输入输出</strong></h3><h4 id="算法输入" tabindex="-1"><a class="header-anchor" href="#算法输入" aria-hidden="true">#</a> <strong>算法输入</strong></h4><ul><li>该任务是通过GR阶段的线长对DR后的每条net中从驱动到每个负载的时延进行预测。因此算法的输入是影响时延的因素，包括线长，slew，capacitance等。哪些特征最有效，需要进行相关性分析进行判断。</li></ul>',18),l={href:"https://gitee.com/oscc-project/i-bm/tree/master/Delay_Prediction_Dataset",target:"_blank",rel:"noopener noreferrer"},p=n('<h4 id="算法输出" tabindex="-1"><a class="header-anchor" href="#算法输出" aria-hidden="true">#</a> <strong>算法输出</strong></h4><p>​ ● 对每条信号线的长度进行估计，并计算出相应的信号传输时延。输出可以是一个列表或数据结构，包含每条信号线及其对应的长度和时延。</p><h3 id="_4-评估指标" tabindex="-1"><a class="header-anchor" href="#_4-评估指标" aria-hidden="true">#</a> <strong>4 评估指标</strong></h3><p>​ ● 时延误差 / 精度：衡量预测时延与实际时延之间的差异。可以通过平均绝对误差或者平均相对误差进行衡量。</p><h3 id="_5-参考模型" tabindex="-1"><a class="header-anchor" href="#_5-参考模型" aria-hidden="true">#</a> <strong>5 参考模型</strong></h3>',5),_={href:"https://gitee.com/oscc-project/delay-prediction/tree/master",target:"_blank",rel:"noopener noreferrer"};function g(u,f){const r=s("ExternalLinkIcon");return i(),c("div",null,[d,e("p",null,[e("a",l,[t("数据集"),a(r)])]),p,e("ul",null,[e("li",null,[e("a",_,[t("数据和参考模型仓库"),a(r)])])])])}const x=o(h,[["render",g],["__file","m1.html.vue"]]);export{x as default};
