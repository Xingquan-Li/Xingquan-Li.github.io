const i=JSON.parse('{"key":"v-7100e267","path":"/train/eda/algorithm-data/Part_7_algorithm/7_4_graph/7_4_9_%E5%9B%BE%E6%9F%93%E8%89%B2%E4%B8%8E%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95.html","title":"7.4.9 图染色与匈牙利算法","lang":"zh-CN","frontmatter":{"title":"7.4.9 图染色与匈牙利算法","order":9},"headers":[{"level":3,"title":"二分图判断","slug":"二分图判断","link":"#二分图判断","children":[]},{"level":3,"title":"最大匹配","slug":"最大匹配","link":"#最大匹配","children":[]}],"git":{"createdTime":1721900327000,"updatedTime":1721900327000,"contributors":[{"name":"simintao","email":"simintao@126.com","commits":1}]},"readingTime":{"minutes":4.93,"words":1479},"filePathRelative":"train/eda/algorithm-data/Part_7_algorithm/7_4_graph/7_4_9_图染色与匈牙利算法.md","localizedDate":"2024年7月25日","excerpt":"<h1> 图染色与匈牙利算法</h1>\\n<h3> 二分图判断</h3>\\n<p><strong>二分图</strong>：将所有点分成两个集合，使得所有边只出现在集合之间。一定不含有奇数环，可能含有长度为偶数的环，不一定是连通图。</p>\\n<h5> 染色法</h5>\\n<p>存储结构：邻接表<br>\\ndfs 思路：</p>\\n<ul>\\n<li>染色可以使用 1 和 2 区分不同颜色，用 0 表示未染色</li>\\n<li>遍历所有点，每次将为染色的点进行dfs，默认染成1或2</li>\\n<li>某个点某个点染色成功不代表整个图就是二分图\\n<ul>\\n<li>当某个点染色失败时，这个图不是二分图</li>\\n<li>染色失败相当于相邻的 2 个点染了相同的颜色。</li>\\n</ul>\\n</li>\\n</ul>","copyright":{"author":"iEDA","license":"GPL-3.0"}}');export{i as data};
