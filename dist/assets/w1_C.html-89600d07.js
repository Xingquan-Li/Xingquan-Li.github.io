import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as r,c as o,d as e,e as l,a as s,f as t}from"./app-1ed3f6c2.js";const d={},c=t(`<h2 id="day1-实习前期准备" tabindex="-1"><a class="header-anchor" href="#day1-实习前期准备" aria-hidden="true">#</a> DAY1: 实习前期准备</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>学习小注：</strong> 在开始学习之前不妨花半小时，先浏览一下Week3 day15的参考资料，对EDA有简要了解，学习方向与总体目标会更加清晰。<br> 以下是学习的一些心得交流，供参考：</p><div class="language-note line-numbers-mode" data-ext="note"><pre class="language-note"><code>      a. 记录关键概念：在学习过程中，记录下每个主题的关键概念和原理。这有助于你构建知识框架。
      b. 反思学习过程：思考在学习过程中遇到的挑战和解决方案，以及这些经历如何帮助你更好地理解材料。
      c. 分享实际例子：提供实际的代码示例或应用场景，这可以帮助更直观地理解抽象概念。
      d. 讨论学习策略：分享你在学习过程中使用的策略，如分块学习、间隔重复等。
      e. 鼓励交流：鼓励他人分享他们的学习心得，创建一个互助的学习氛围。
      f. 使用清晰语言：在分享时使用简洁明了的语言，确保不同背景的人都能理解。
      g. 利用多种媒介：可以通过博客、视频、演讲或社交媒体等多种方式分享你的学习心得，学习形式包括不局限于知识点总结笔记、思维导图、流程图等。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="一、具体要求" tabindex="-1"><a class="header-anchor" href="#一、具体要求" aria-hidden="true">#</a> 一、具体要求</h3><p>（一）<strong>编程环境搭建</strong>:</p><ul><li>安装 VS Code 及相关插件安装(Clang、Google Test、CMake、DoxyGen、Remote-SSH)； <ul><li><strong>Remote-SSH</strong><br> 学习要求: 了解SSH协议和远程服务器的概念，通过SSH连接服务器。<br> 功能: 允许VS Code通过SSH连接到远程服务器，进行代码编辑、运行和调试。</li></ul></li><li>阅读相关PPT了解工具功能；</li></ul><p>（二）<strong>Gitee工程下载</strong>:</p>`,6),u={href:"https://gitee.com/oscc-project/iTraining",target:"_blank",rel:"noopener noreferrer"},h={href:"https://gitee.com/oscc-project/iEDA",target:"_blank",rel:"noopener noreferrer"},p=e("h3",{id:"二、学习成果展示",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#二、学习成果展示","aria-hidden":"true"},"#"),l(" 二、学习成果展示")],-1),g=e("ul",null,[e("li",null,"提交每日的学习记录；"),e("li",null,"整理关于编程环境搭建中遇到的问题和解决方案的笔记；")],-1),b=e("h3",{id:"三、参考链接",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#三、参考链接","aria-hidden":"true"},"#"),l(" 三、参考链接")],-1),_=e("p",null,[l("（一）"),e("strong",null,"编程环境搭建参考资料"),l(":")],-1),m={href:"https://gitee.com/oscc-project/iTraining/tree/master/C++/ppt",target:"_blank",rel:"noopener noreferrer"},k={href:"https://gitee.com/oscc-project/iTraining/tree/master/C++/ppt",target:"_blank",rel:"noopener noreferrer"},f=t('<h2 id="day2-插件学习" tabindex="-1"><a class="header-anchor" href="#day2-插件学习" aria-hidden="true">#</a> DAY2：插件学习</h2><h3 id="一、具体要求-1" tabindex="-1"><a class="header-anchor" href="#一、具体要求-1" aria-hidden="true">#</a> 一、具体要求</h3><p>（一）<strong>学习插件基础</strong>:</p><ul><li>包括 Clang、Google Test、CMake、DoxyGen 以及 CMakeList.txt 文件的基础语法 <ul><li><strong>Clang</strong><br> 学习要求: 了解C/C++语言基础，熟悉Clang编译器的使用。<br> 功能: 提供C/C++语言的语法高亮、智能感知、代码导航、重构工具等。</li><li><strong>Google Test</strong><br> 学习要求: 熟悉C++单元测试的概念，了解Google Test框架的使用。<br> 功能: 帮助开发者编写和运行单元测试，确保代码的质量和可靠性。</li><li><strong>CMake</strong><br> 学习要求: 了解CMake的基本语法和构建系统的概念。<br> 功能: 通过CMakeLists.txt文件定义项目的构建过程，支持跨平台编译和构建。</li><li><strong>DoxyGen</strong><br> 学习要求: 了解文档生成工具的使用，熟悉DoxyGen的配置选项。<br> 功能: 自动从源代码中提取注释生成文档，支持多种输出格式。</li></ul></li><li>编写示例代码来熟悉这些插件的使用</li><li>VS code下的Cmake工程文件配置 <ul><li><strong>学习要求</strong><ul><li>学习CMake的基本语法和工作原理，知道如何编写CMakeLists.txt文件。</li><li>熟悉VSCode的基本使用，包括扩展的安装和管理。</li><li>学习如何在VSCode中配置和使用调试器。</li></ul></li><li><strong>功能</strong><ul><li>项目构建</li><li>配置Cmake构建类型和其他编译选项</li><li>实现代码导航与快速查找引用</li><li>代码分析，及早发现编译问题</li><li>配置启动调试</li></ul></li></ul></li></ul><h3 id="二、学习成果形式" tabindex="-1"><a class="header-anchor" href="#二、学习成果形式" aria-hidden="true">#</a> 二、学习成果形式</h3><ul><li>输出插件使用的学习笔记，记录遇到的问题及解决方法</li></ul><h3 id="三、参考资料" tabindex="-1"><a class="header-anchor" href="#三、参考资料" aria-hidden="true">#</a> 三、参考资料</h3>',7),v={href:"https://gitee.com/oscc-project/iTraining/tree/master/C++/tools",target:"_blank",rel:"noopener noreferrer"},C={href:"http://xn--5nqw77arwfh2w9egj22a.md",target:"_blank",rel:"noopener noreferrer"},x=e("br",null,null,-1),G=e("li",null,[l("《开发环境tools.pdf》："),e("br"),l(" 主要讲述vscode的介绍、配置。")],-1),w=e("li",null,[l("《Glog使用.pptx》："),e("br"),l(" 讲述Glog使用文档、Glog下载和启动、Glog分级打印、Glog条件打印、Glog调试模式、Glog Check宏、Glog高级功能。")],-1),y=e("li",null,[l("《Modern+CMake文档.pdf》："),e("br"),l(" 从安装、使用CMake生成项目、CMake命令行选项的设置出发，讲述CMake基础知识、基本概念和基本控制语法等内容，并阐述如何构建项目、运行其他程序等操作。")],-1),D=e("p",null,[l("（二）"),e("strong",null,"视频教程"),l(":")],-1),M={href:"https://www.bilibili.com/video/BV1xp4y1V7qu",target:"_blank",rel:"noopener noreferrer"},S=e("br",null,null,-1),P=t(`<p><strong>学习小注：</strong> 这部分对于没有接触过编程的同学，学习可能比较茫然，不知所云。不要着急，先简单了解，留个印象，之后编程有一定基础后，遇到困难，再回来看看，会有实际的收获~</p><h2 id="day3-day4-工具学习" tabindex="-1"><a class="header-anchor" href="#day3-day4-工具学习" aria-hidden="true">#</a> DAY3-DAY4：工具学习</h2><h3 id="一、具体要求-2" tabindex="-1"><a class="header-anchor" href="#一、具体要求-2" aria-hidden="true">#</a> 一、具体要求</h3><p>（一）<strong>Git 学习</strong>:</p><ul><li>包括 fork 工程、创建分支、git add、git commit、git push、git pull、提交 Pull Request 等操作。<br><strong>学习示例：</strong><ul><li><strong>Fork 工程</strong><br> a. 访问GitHub/Gitee上的项目页面。<br> b. 点击右上角的 &quot;Fork&quot; 按钮，将项目复制到自己的GitHub账户下。</li><li><strong>创建分支</strong><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token operator">&lt;</span>仓库URL<span class="token operator">&gt;</span>  <span class="token comment"># 克隆仓库到本地</span>
<span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>仓库名<span class="token operator">&gt;</span>         <span class="token comment"># 进入仓库目录</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token operator">&lt;</span>新分支名<span class="token operator">&gt;</span>  <span class="token comment"># 创建并切换到新分支</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>添加更改到暂存区</strong><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>文件名<span class="token operator">&gt;</span>  <span class="token comment"># 添加单个文件到暂存区</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>          <span class="token comment"># 添加当前目录的所有更改到暂存区</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>提交更改到本地仓库</strong><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;提交信息&quot;</span>  <span class="token comment"># 提交更改到本地仓库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>推送更改到远程仓库</strong><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token operator">&lt;</span>分支名<span class="token operator">&gt;</span>  <span class="token comment"># 将本地分支的更改推送到远程仓库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>从远程仓库拉取更改</strong><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> pull origin <span class="token operator">&lt;</span>远程分支名<span class="token operator">&gt;</span>  <span class="token comment"># 从远程仓库拉取分支的更改并合并到当前分支</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>提交 Pull Request</strong><br> a. 在GitHub上访问你fork的项目。<br> b. 点击 &quot;Pull Request&quot; 按钮。<br> c. 选择要合并的源分支和目标分支。<br> d. 填写Pull Request的描述信息并提交。</li></ul></li><li><strong>学习要达到的效果</strong><ul><li>理解Git的工作原理和分布式版本控制的概念。</li><li>能够熟练地在本地和远程仓库之间同步代码。</li><li>掌握基本的分支管理策略，如创建分支、合并分支等。</li><li>能够通过Pull Request参与开源项目的协作开发。</li><li>学会解决常见的合并冲突。</li></ul></li></ul><p>（二）<strong>终端工具安装及使用</strong>:</p><ul><li>安装和使用 MobaXterm / Xshell，记录安装过程中遇到的问题</li></ul><p>（三）<strong>Linux 基础</strong>:</p><ul><li><p>学习重点内容包括：</p><ul><li>文件传输方法(cp/scp/rsync)<br> 如何从/home/zhuangchunan目录cp或scp或rsync常用lib包到自己目录;</li><li>文件权限设置(chmod)<br> 777 750 读、写、执行 用户 用户组 其他用户区分清楚;</li><li>进程监控(top/htop)</li><li>磁盘空间查询(df -h)</li><li>目录下文件大小查看(du -sh)</li><li>文件操作(kill进程/ls/pwd/mkdir/tree)</li><li>编辑器(vim/cat/tail/nohup)</li><li>终端复用工具(tmux)</li></ul><p>此处只列举了一部分命令，开发时常用命令大概上百条，熟能生巧，需平时多查阅资料和实践。<br> （四）<strong>代码编程规范学习</strong><br> （五）<strong>软件设计思想学习</strong></p></li></ul><h3 id="二、学习成果展示-1" tabindex="-1"><a class="header-anchor" href="#二、学习成果展示-1" aria-hidden="true">#</a> 二、学习成果展示</h3><ul><li>提交每日的学习记录；</li><li>整理Git、Linux、编码规范、软件设计思想等内容的学习笔记；</li></ul><h3 id="三、参考资料-1" tabindex="-1"><a class="header-anchor" href="#三、参考资料-1" aria-hidden="true">#</a> 三、参考资料：</h3><p>（一）<strong>MobaXterm 安装及使用</strong>:</p>`,13),V={href:"https://blog.csdn.net/qq_34435096/article/details/130729092",target:"_blank",rel:"noopener noreferrer"},q=e("p",null,"讲述使用Mobaxterm的背景、介绍如何快速入门，以及六种高级使用方法：多标签会话、SSH隧道、会话管理器、宏和脚本、远程桌面和自定义设置。",-1),T=e("p",null,[l("（二）"),e("strong",null,"Linux 基础命令学习"),l(":")],-1),A={href:"https://blog.csdn.net/weixin_57023347/article/details/121194810",target:"_blank",rel:"noopener noreferrer"},E=e("br",null,null,-1),L=e("p",null,[l("（三）"),e("strong",null,"Git 学习参考资料"),l(":"),e("br"),l(" 文档版讲述git使用的详细教程，可搭配陶思敏老师关于git命令的实操视频（后面两个视频）搭配学习：")],-1),R={href:"https://blog.csdn.net/nanxun201314/article/details/127719569",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.bilibili.com/video/BV1Ch4y1C7wi",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.bilibili.com/video/BV1v94y167kd",target:"_blank",rel:"noopener noreferrer"},H=e("p",null,[l("（四）"),e("strong",null,"编程规范参考资料"),l(":")],-1),Y=e("p",null,"编程规范是为了使软件代码具有可读性，保证软件质量，因此制定本文档。确保编程规范，让你的代码更有参考使用价值。文档学习可搭配陶思敏老师的视频教学配套使用：",-1),N={href:"https://gitee.com/oscc-project/iTraining/tree/master/C++/code-style",target:"_blank",rel:"noopener noreferrer"},X={href:"https://www.bilibili.com/video/BV1TN411h72Q",target:"_blank",rel:"noopener noreferrer"},F=e("p",null,[l("（五）"),e("strong",null,"软件设计思想参考资料"),l(":")],-1),I={href:"https://www.bilibili.com/video/BV1GN411h7Qg",target:"_blank",rel:"noopener noreferrer"},Q=e("p",null,"陶思敏老师介绍怎样进行软件设计。包括：软件的本质，软件设计过程，软件设计需要考虑的内容等。",-1),z=t('<h2 id="day5-day7-c-基础学习" tabindex="-1"><a class="header-anchor" href="#day5-day7-c-基础学习" aria-hidden="true">#</a> DAY5-DAY7：C++基础学习</h2><p><strong>学习小注：</strong> 接下来正式进入C++编程学习，由于大家学习背景不同，可以根据自己的学习习惯、特长与基础情况，调整适合自己的学习计划与方法。编程是一项实践技能，因此编写尽可能多的代码是至关重要的。可以以书籍为导向，也可以在B站、慕课等网站视频学习，尝试解决实际问题，或在在线平台上练习编程挑战。这部分学习形式不做要求。</p><h3 id="一、具体要求-3" tabindex="-1"><a class="header-anchor" href="#一、具体要求-3" aria-hidden="true">#</a> 一、具体要求</h3><ul><li>学习 C++ 基本语法和面向对象编程基础，选择自己喜欢的学习资料（书籍/视频/教程），以下仅供参考，目标是掌握C++基本语法和面向对象编程基础：</li></ul><p>（一）<strong>基础较好的同学学习规划</strong>:</p><ul><li>学习 C++ Primer Plus 的指定章节内容： <ul><li>第7章至第13章（必看）</li><li>第14章至第17章（推荐看）</li><li>第18章（可选看）</li></ul></li><li>每章挑选2-3个章节习题并完成，注意代码规范，将代码提交到 git 仓库中，或者直接跳过本部分的学习。</li></ul><p>（二）<strong>基础较为一般的同学学习规划</strong>:</p>',7),O={href:"https://light-city.github.io/",target:"_blank",rel:"noopener noreferrer"},U=e("li",null,"学习基础部分，实战系列的重点实战练习，惯用法,并记录笔记。",-1),W=t("<p>（三）<strong>学习目标</strong>:</p><ul><li><strong>C++基础</strong>: <ul><li>编程基础：常量与变量，进制，运算符，条件控制语句，循环控制语句，数组，字符串；</li><li>函数：函数概念，字符串操作函数，自定义函数，递归的使用；</li><li>指针：指针变量，指针字长，指针赋值，函数指针参数，指针操作字符串，const，位逻辑运算符，数组指针，指针数组，多维数组函数参数，浅拷贝，深拷贝；</li><li>内存管理：变量作用域和生命周期，内存分区，堆的分配和释放，函数调用模型，内存操作函数，宏定义和批处理；</li><li>复合类型：结构体，结构体指针，结构体函数参数，复合类型的声明和使用，结构体嵌套指针；</li><li>文件操作：文件分类，文件的打开和关闭，文件操作函数，文件读写缓冲区；</li><li>简单数据结构和算法：链表的基本概念，单链表的相关操作，大O表示法，线性表顺序存储，线性表链式存储，队列的顺序存储，队列的链式存储，栈的顺序存储，栈的链式存储，二叉树，二叉树的基本操作，常用排序算法；</li><li>接口的封装和设计：封装和设计的思想，函数的封装设计，解耦合的设计，函数指针定义的三种方式，回调函数，模块实现和业务分离的思想。</li></ul></li></ul><p>（四）<strong>Pull Request提交步骤</strong>:</p>",3),J={href:"https://gitee.com/oscc-project/iTraining/tree/master/C++/codes",target:"_blank",rel:"noopener noreferrer"},K=e("li",null,[l("操作步骤： "),e("ul",null,[e("li",null,"Fork 本仓库；"),e("li",null,"clone到本地；"),e("li",null,"上传内容至 iTraining/C++/codes/{年份-月份}/{学习者的名字}；"),e("li",null,"新建 Pull Request 到 master 分支；")])],-1),Z=t('<h3 id="二、学习成果展示-2" tabindex="-1"><a class="header-anchor" href="#二、学习成果展示-2" aria-hidden="true">#</a> 二、学习成果展示</h3><ul><li>提交每日的学习记录；</li><li>整理 C++ 学习笔记；</li><li>完成 C++ Primer Plus 的习题，提交 PR；</li></ul><h3 id="三、参考资料-2" tabindex="-1"><a class="header-anchor" href="#三、参考资料-2" aria-hidden="true">#</a> 三、参考资料</h3><p>（一）<strong>C++ 参考资料</strong>:</p>',4),$=e("li",null,"书籍推荐: C++ Primer Plus、C++编程思想",-1),ee={href:"https://light-city.github.io/",target:"_blank",rel:"noopener noreferrer"},le=e("p",null,[l("（二）"),e("strong",null,"编程辅助工具视频教程"),l(":")],-1),ne={href:"https://www.bilibili.com/video/BV1eh4y1C7Ys",target:"_blank",rel:"noopener noreferrer"},se=e("br",null,null,-1),te=e("p",null,[e("strong",null,"学习小注："),l(" 合理使用编程工具可以极大的提高我们的编程效率，但也不要过分依赖，遇到问题自我探索，自我突破也不失为一件趣事。")],-1);function ie(ae,re){const n=a("ExternalLinkIcon");return r(),o("div",null,[c,e("ul",null,[e("li",null,[l("将以下Gitee工程下载到本地，并简单点进去探索下组织目录结构划分： "),e("ul",null,[e("li",null,[e("a",u,[l("水滴学习部分"),s(n)])]),e("li",null,[e("a",h,[l("iEDA部分"),s(n)])])])])]),p,g,b,_,e("ul",null,[e("li",null,[l("材料："),e("a",m,[l("《C++工具介绍.pptx》"),s(n)])]),e("li",null,[l("材料："),e("a",k,[l("《编程环境.pptx》"),s(n)])])]),f,e("p",null,[l("（一）"),e("strong",null,[e("a",v,[l("VScode下Cmake工程配置文件相关资料"),s(n)])]),l(":")]),e("ul",null,[e("li",null,[l("《Vscode下Cmake "),e("a",C,[l("工程配置文件.md"),s(n)]),l("》："),x,l(" 以示例形式展示vscode如何编写launch.json、task.json。")]),G,w,y]),D,e("ul",null,[e("li",null,[e("a",M,[l("《iEDA-水滴计划：CMake语法与工程实践》"),s(n)]),l("："),S,l(" 陶思敏老师介绍cmake的安装，相关命令选项，CMakeLists.txt文件的编程规范、语法以及工程实践等等。")])]),P,e("ul",null,[e("li",null,[e("a",V,[l("《MobaXterm快速入门、高级使用技巧》"),s(n)])])]),q,T,e("ul",null,[e("li",null,[e("a",A,[l("《Linux常用指令》"),s(n)]),E,l(" 主要分为Linux使用的基本操作、文件权限相关指令、系统相关指令以及网络相关命令。")])]),L,e("ul",null,[e("li",null,[e("a",R,[l("《Git使用详细教程》"),s(n)])]),e("li",null,[l("视频: "),e("a",j,[l("《iEDA-水滴计划：git简介与命令实践》"),s(n)])]),e("li",null,[l("视频: "),e("a",B,[l("《iEDA-水滴计划：git简介与命令实践（2）》"),s(n)])])]),H,Y,e("ul",null,[e("li",null,[e("a",N,[l("《编程规范.docx》"),s(n)])]),e("li",null,[l("视频: "),e("a",X,[l("《iEDA-水滴计划：编程规范概述》"),s(n)])])]),F,e("ul",null,[e("li",null,[e("p",null,[l("视频: "),e("a",I,[l("《iEDA-水滴计划：怎样进行软件设计》"),s(n)])]),Q])]),z,e("ul",null,[e("li",null,[l("结合《C++那些事》教程进行学习，教程链接："),e("a",O,[l("C++那些事"),s(n)]),l("。")]),U]),W,e("ul",null,[e("li",null,[l("Gitee 仓库地址："),e("a",J,[l("C++ Codes"),s(n)])]),K]),Z,e("ul",null,[$,e("li",null,[e("a",ee,[l("《C++那些事》教程"),s(n)])])]),le,e("ul",null,[e("li",null,[e("a",ne,[l("《iEDA-水滴计划：Copilot插件及ChatGPT工具在编程中的应用》"),s(n)]),se,l(" 李伟国同学介绍：Copilot插件及ChatGPT工具在编程中的应用。包括：基本语句实现，算法补全，新特性，调试和注意事项等。")])]),te])}const ce=i(d,[["render",ie],["__file","w1_C.html.vue"]]);export{ce as default};
