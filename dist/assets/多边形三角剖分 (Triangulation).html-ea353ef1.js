import{_ as a,a as t,b as m,c as h,d as r,e as i}from"./geometry_4-8e02cc2e.js";import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as o,f as n}from"./app-1ed3f6c2.js";const c={},e=n('<h1 id="多边形三角剖分-triangulation" tabindex="-1"><a class="header-anchor" href="#多边形三角剖分-triangulation" aria-hidden="true">#</a> 多边形三角剖分 (Triangulation)</h1><p>三角剖分有两种，一种是对多边形的三角剖分，一种是对平面点集的三角剖分。这里讨论的是对多边形的三角剖分。</p><h2 id="美术馆问题-art-gallery-problem" tabindex="-1"><a class="header-anchor" href="#美术馆问题-art-gallery-problem" aria-hidden="true">#</a> 美术馆问题 (Art Gallery Problem)</h2><p>如何用最少的守卫看守美术馆, 并使得美术馆的每个角落都在守卫的视野之中？<br> 一个等价的问题是：需要多少盏灯来完全照亮整个房间。</p><div style="text-align:center;"><img src="'+a+'" alt="ASIC Flow" width="200"><h4>图1 美术馆问题</h4></div><p>美术馆问题</p><h3 id="朴素的上下界" tabindex="-1"><a class="header-anchor" href="#朴素的上下界" aria-hidden="true">#</a> 朴素的上下界</h3><p>将美术馆抽象成一个多边形，那么当这个多边形存在核时，显然只需要一个守卫就能完成。<br> 考虑最坏情况，在多边形任意顶点上都放置一个守卫，也一定可以完成。<br> 所以守卫的数量在 <img src="https://math.jianshu.com/math?formula=1" alt="1"> 到 <img src="https://math.jianshu.com/math?formula=n" alt="n"> 之间。</p><p>很遗憾，对于一般多边形，求解最少需要多少守卫能够完成任务的问题是 <img src="https://math.jianshu.com/math?formula=NP" alt="NP"> 的。</p><h3 id="chvatal-美术馆定理-chvatal-art-gallery-theorem" tabindex="-1"><a class="header-anchor" href="#chvatal-美术馆定理-chvatal-art-gallery-theorem" aria-hidden="true">#</a> Chvátal 美术馆定理 (Chvátal Art Gallery Theorem)</h3><p>将美术馆抽象为多边形，守卫抽象为点。<br> 对于任意边数为 <img src="https://math.jianshu.com/math?formula=n" alt="n"> 的多边形，最多只需要 <img src="https://math.jianshu.com/math?formula=\\lfloor \\frac{n }{3} \\rfloor" alt="floor rac{n }{3} floor"> 个点就一定能完全覆盖了。而且存在多边形确实需要 <img src="https://math.jianshu.com/math?formula=\\lfloor \\frac{ n}{3} \\rfloor" alt="floor rac{ n}{3} floor"> 个点才能覆盖。</p><div style="text-align:center;"><img src="'+t+'" alt="ASIC Flow" width="200"><h4>图2 美术馆定理</h4></div><p>最坏情况</p><p>如上图所示，每一个尖端都需要一个点进行覆盖。这种情况是最坏情况。</p><p>如何证明没有更坏的情况？</p><h3 id="fisk-的简短证明" tabindex="-1"><a class="header-anchor" href="#fisk-的简短证明" aria-hidden="true">#</a> Fisk 的简短证明</h3><p>显然对于一个三角形只需要在其一个顶点上放置一个点就可以覆盖这个三角形。<br> 引入若干条不相交的对角线(diagonal)对多边形进行三角剖分。对角线的定义为：连接多边形一对顶点的线段。<br> 可以证明：任何一个顶点数量为 <img src="https://math.jianshu.com/math?formula=n" alt="n"> 的简单多边形都存在一个三角剖分，使其分解为 <img src="https://math.jianshu.com/math?formula=n-2" alt="n-2"> 个三角形。<br> 证明可以使用数学归纳法的思想。任取多边形的一条对角线，将多边形切分为顶点数量分别为 <img src="https://math.jianshu.com/math?formula=m_1" alt="m_1"> ， <img src="https://math.jianshu.com/math?formula=m_2" alt="m_2"> 的多边形，有 <img src="https://math.jianshu.com/math?formula=m_1%2Cm_2&gt;2" alt="m_1,m_2&gt;2"> 且 <img src="https://math.jianshu.com/math?formula=m_1%2Bm_2%3Dn%2B2" alt="m_1+m_2=n+2"> ，又根据假设： <img src="https://math.jianshu.com/math?formula=n" alt="n"> 个顶点的简单多边形能分解为 <img src="https://math.jianshu.com/math?formula=n-2" alt="n-2"> 个三角形。所以包含的三角形数量为 <img src="https://math.jianshu.com/math?formula=(m_1-2)%2B(m_2-2)%3Dn-2" alt="(m_1-2)+(m_2-2)=n-2">个。</p><p>将多边形三角剖分后，形成了一张图 <img src="https://math.jianshu.com/math?formula=G" alt="G"> ，点集为多边形的顶点，边集为多边形的边和对角线的并集。观察 <img src="https://math.jianshu.com/math?formula=G" alt="G"> 的对偶图，容易看出是一棵树。所以对于 <img src="https://math.jianshu.com/math?formula=G" alt="G"> 一定能够进行三染色。<br> 对于相邻的两个三角形，不重合的两个点染色必定相同，而且每个三角形的三个顶点必须一一对应这三种颜色。所以从任意三角形开始反复迭代即可完成对整张图的三染色。</p><div style="text-align:center;"><img src="'+m+'" alt="ASIC Flow" width="200"><h4>图3 美术馆定理</h4></div><p>顶点的三染色</p><p>在这三种颜色中，任选一种颜色就可以完成覆盖。根据鸽巢原理，最多选择 <img src="https://math.jianshu.com/math?formula=\\lfloor \\frac{ n }{3} \\rfloor" alt="floor rac{ n }{3} floor"> 个点就足够了。</p><p>以上是美术馆问题的一个近似解，指出对于任意 <img src="https://math.jianshu.com/math?formula=n" alt="n"> 个点的简单多边形，虽然求解最少使用多少点进行全覆盖是 <img src="https://math.jianshu.com/math?formula=NP" alt="NP"> 的，但是可以证明可以使用不超过 <img src="https://math.jianshu.com/math?formula=\\lfloor \\frac{ n }{3} \\rfloor" alt="floor rac{ n }{3} floor"> 个点进行全覆盖。<br> 在证明的过程中使用了三角剖分这一经典的几何算法，但是对于三角剖分的一些细节还没有考虑。比如：是否任意简单多边形都能进行三角剖分？如果简单多边形带洞，是否依然能三角剖分？</p><h2 id="三角剖分" tabindex="-1"><a class="header-anchor" href="#三角剖分" aria-hidden="true">#</a> 三角剖分</h2><p>首先界定研究对象，这里的三角剖分指的是对简单的，可以带空洞的多边形的三角剖分。<br> 简单多边形是边不相交的多边形，根据 <img src="https://math.jianshu.com/math?formula=Jordan" alt="Jordan"> 曲线定理，这样的多边形将平面分为一个外部区域和内部区域。</p><p>规定：对于不带洞的简单多边形，沿着边逆时针走一圈为正方向。对于带洞的简单多边形，沿着外边界逆时针走一圈为正方向，沿着内部的洞顺时针走一圈为正方向。<br> 这样能够保证任何时刻沿着边界前进时，内部区域都在左手侧。</p><h3 id="双耳定理-two-ears-theorem" tabindex="-1"><a class="header-anchor" href="#双耳定理-two-ears-theorem" aria-hidden="true">#</a> 双耳定理 (Two Ears theorem)</h3><p>耳：对于多边形中相邻的三个顶点 <img src="https://math.jianshu.com/math?formula=u%2Cv%2Cw" alt="u,v,w"> ，如果向量 <img src="https://math.jianshu.com/math?formula=\\overrightarrow{uv} \\times \\overrightarrow{vw} &gt;0" alt="verrightarrow{uv} imes verrightarrow{vw} &gt;0"> 且 <img src="https://math.jianshu.com/math?formula=\\triangle uvw" alt="riangle uvw"> 不包含任意其他顶点，则 <img src="https://math.jianshu.com/math?formula=u%2Cv%2Cw" alt="u,v,w">三点构成一个耳。直观的看就是三个点满足局部凸性而且内部是空的。<br> 对于一个多边形，可以割去一个耳，会在不改变其他性质的情况下，使得多边形的顶点数减小。</p><p>双耳定理指出对于任意简单多边形，至少有两个耳。<br> 证明使用了数学归纳法，这里略。实际上证明的思路和下面的三角剖分构造的思路是一样的。</p><h3 id="三角剖分存在性的证明" tabindex="-1"><a class="header-anchor" href="#三角剖分存在性的证明" aria-hidden="true">#</a> 三角剖分存在性的证明</h3><p>使用数学归纳法。<br> 对于一个多边形，有两种属性，顶点数 <img src="https://math.jianshu.com/math?formula=n" alt="n"> 和空洞数 <img src="https://math.jianshu.com/math?formula=h" alt="h"> 。</p><p>基础情况：<img src="https://math.jianshu.com/math?formula=n%3D3%2Ch%3D0" alt="n=3,h=0"> 时，多边形本身就是三角形，显然存在三角剖分。<br> 假设：对于一个顶点数为 <img src="https://math.jianshu.com/math?formula=n" alt="n">， 空洞数为 <img src="https://math.jianshu.com/math?formula=h" alt="h"> 的多边形。任意满足： <img src="https://math.jianshu.com/math?formula=h&#39;&lt;h" alt="h&#39;&lt;h"> 或 <img src="https://math.jianshu.com/math?formula=h&#39;%3Dh%2Cn&#39;&lt;n" alt="h&#39;=h,n&#39;&lt;n">的多边形都存在三角剖分。<br> 实际上这是一个全序关系，对于任意两个多边形，能够基于这个关系进行比较。</p><p>考虑多边形 <img src="https://math.jianshu.com/math?formula=P" alt="P"> 最下面的一个顶点 <img src="https://math.jianshu.com/math?formula=j" alt="j"> （如果有多个最下面的点，取最左边的一个点），有两种情况。</p><ol><li><p>如果 <img src="https://math.jianshu.com/math?formula=i%2Cj%2Ck" alt="i,j,k"> 是一个耳，那么直接切去，化为顶点数为 <img src="https://math.jianshu.com/math?formula=n-1" alt="n-1">的多边形。</p></li><li><p>如果 <img src="https://math.jianshu.com/math?formula=i%2Cj%2Ck" alt="i,j,k"> 不是耳，那么找到多边形其他点中距离 <img src="https://math.jianshu.com/math?formula=j" alt="j"> 最近的一个点 <img src="https://math.jianshu.com/math?formula=m" alt="m"> ，连接 <img src="https://math.jianshu.com/math?formula=jm" alt="jm"> 进行切开，又有两种情况：</p></li></ol><div style="text-align:center;"><img src="'+h+'" alt="ASIC Flow" width="200"><h4>图4 三角剖分</h4></div><p>构造性证明</p><ol><li>如上图左所示， <img src="https://math.jianshu.com/math?formula=m" alt="m"> 在外边界上，那么多边形将化为两个规模更小的多边形。</li><li>如上图右所示， <img src="https://math.jianshu.com/math?formula=m" alt="m"> 在空洞上，新的多边形虽然顶点数量增加了，但是空洞的数量减少了。基于上面的全序关系，新多边形和原来相比规模更小。</li></ol><p>根据归纳假设，规模更小的多边形存在三角剖分，那么多边形 <img src="https://math.jianshu.com/math?formula=P" alt="P"> 也存在三角剖分。证明结束。</p><h3 id="一些其他性质" tabindex="-1"><a class="header-anchor" href="#一些其他性质" aria-hidden="true">#</a> 一些其他性质</h3><h4 id="唯一性" tabindex="-1"><a class="header-anchor" href="#唯一性" aria-hidden="true">#</a> 唯一性：</h4><p>不唯一，最简单的凸四边形就有两种三角剖分。</p><h4 id="三角剖分种数的最值" tabindex="-1"><a class="header-anchor" href="#三角剖分种数的最值" aria-hidden="true">#</a> 三角剖分种数的最值：</h4><p>最小值为 <img src="https://math.jianshu.com/math?formula=1" alt="1"> ，最简单的凹四边形只有一种剖分方式，以此可以构造出其他情况。<br> 最大值在凸多边形的时候达到。<br> 假设多边形顶点数为 <img src="https://math.jianshu.com/math?formula=n" alt="n"> ，那么递推式为：<br><img src="https://math.jianshu.com/math?formula=C_n%3D\\left \\{ \\begin{aligned} 1 %26 %2C %26 n%3D3 \\\\ \\Sigma_{i%3D1}^{n-3}{C_{i%2B2}*C_{n-i}} %26 %2C %26 n&gt;3 \\end{aligned} \\right." alt="C_n=eft  egin{aligned} 1 &amp; , &amp; n=3  igma_{i=1}^{n-3}{C_{i+2}*C_{n-i}} &amp; , &amp; n&gt;3 nd{aligned} ight."><br> 即对应第 <img src="https://math.jianshu.com/math?formula=n-2" alt="n-2"> 项的 <img src="https://math.jianshu.com/math?formula=Catalan" alt="Catalan"> 数。</p><h4 id="时间复杂度" tabindex="-1"><a class="header-anchor" href="#时间复杂度" aria-hidden="true">#</a> 时间复杂度</h4><p>多边形的三角剖分可以在 <img src="https://math.jianshu.com/math?formula=O(nlogn)" alt="O(nlogn)"> 时间复杂度内完成，下面是三角剖分算法，分为两个步骤：单调多边形分解和单调多边形内三角剖分。</p><h2 id="单调多边形分解-monotone-decomposition" tabindex="-1"><a class="header-anchor" href="#单调多边形分解-monotone-decomposition" aria-hidden="true">#</a> 单调多边形分解 (Monotone Decomposition)</h2><h3 id="多边形单调性" tabindex="-1"><a class="header-anchor" href="#多边形单调性" aria-hidden="true">#</a> 多边形单调性</h3><p>如果一条链上每条线段对于一条直线 <img src="https://math.jianshu.com/math?formula=l" alt="l"> 的投影只在折点处相交，那么折线对直线 <img src="https://math.jianshu.com/math?formula=l" alt="l"> 具有单调性。</p><div style="text-align:center;"><img src="'+r+'" alt="ASIC Flow" width="200"><h4>图5 多边形单调性</h4></div><p>单调折线</p><p>如果一个多边形能被分成互补的两条链，而且这两条链都对直线 <img src="https://math.jianshu.com/math?formula=l" alt="l"> 单调，那么这个多边形对 <img src="https://math.jianshu.com/math?formula=l" alt="l"> 单调。</p><div style="text-align:center;"><img src="'+i+'" alt="ASIC Flow" width="200"><h4>图6 单调折线</h4></div><p>单调多边形</p><p>为了方便，在下面的算法中，单调多边形指的是对 <img src="https://math.jianshu.com/math?formula=y" alt="y"> 轴单调的多边形，正如上图所示，是一个对 <img src="https://math.jianshu.com/math?formula=y" alt="y"> 轴单调的多边形。</p><p>对于一个单调多边形，可以快速而简单地进行三角剖分。但是首先必须要把整个的简单多边形分解成若干个单调多边形。<br> 算法如下。</p><h3 id="顶点类型定义" tabindex="-1"><a class="header-anchor" href="#顶点类型定义" aria-hidden="true">#</a> 顶点类型定义</h3><p>对于多边形上的每一个点，可以分成 <img src="https://math.jianshu.com/math?formula=5" alt="5"> 类：开始点 (start vertex)，结束点(end vertex)，分裂点 (split vertex)，合并点 (merge vertex)和普通点 (regular vertex)。<br> 假设当前点为<img src="https://math.jianshu.com/math?formula=q" alt="q">，其前驱为<img src="https://math.jianshu.com/math?formula=p" alt="p">，后继为<img src="https://math.jianshu.com/math?formula=r" alt="r">。并且为了方便，我们假设任意两个点之间的纵坐标不同，虽然对于纵坐标相同的情况，这个算法依然正确。</p><ol><li>开始点：当且仅当 <img src="https://math.jianshu.com/math?formula=p" alt="p"> 和 <img src="https://math.jianshu.com/math?formula=r" alt="r"> 都在 <img src="https://math.jianshu.com/math?formula=q" alt="q"> 下方，并且内角 <img src="https://math.jianshu.com/math?formula=\\angle pqr &lt; \\pi" alt="ngle pqr &lt; i">。</li><li>结束点：当且仅当 <img src="https://math.jianshu.com/math?formula=p" alt="p"> 和 <img src="https://math.jianshu.com/math?formula=r" alt="r"> 都在 <img src="https://math.jianshu.com/math?formula=q" alt="q"> 上方，并且内角 <img src="https://math.jianshu.com/math?formula=\\angle pqr &lt; \\pi" alt="ngle pqr &lt; i">。</li><li>分裂点：当且仅当 <img src="https://math.jianshu.com/math?formula=p" alt="p"> 和 <img src="https://math.jianshu.com/math?formula=r" alt="r"> 都在 <img src="https://math.jianshu.com/math?formula=q" alt="q"> 下方，并且内角 <img src="https://math.jianshu.com/math?formula=\\angle pqr &gt; \\pi" alt="ngle pqr &gt; i">。</li><li>合并点：当且仅当 <img src="https://math.jianshu.com/math?formula=p" alt="p"> 和 <img src="https://math.jianshu.com/math?formula=r" alt="r"> 都在 <img src="https://math.jianshu.com/math?formula=q" alt="q"> 下方，并且内角 <img src="https://math.jianshu.com/math?formula=\\angle pqr &gt; \\pi" alt="ngle pqr &gt; i">。</li><li>普通点：不满足前 <img src="https://math.jianshu.com/math?formula=4" alt="4"> 种的全都是普通点。</li></ol><p>分裂点和合并点是破坏多边形单调性的原因，所以需要在这两个点的地方引进一条内对角线，将多边形拆分成两个小的多边形，以此来保证两个小多边形是单调的。显然对于分裂点，我们需要向上引入一条内对角线，对于合并点，需要向下引入一条内对角线。</p><p>以分裂点为例，如上图所示，在分裂点 <img src="https://math.jianshu.com/math?formula=v_{i}" alt="v_{i}">处，我们需要找到在左右边境内上方最近的第一个点，图中为 <img src="https://math.jianshu.com/math?formula=helper(e_j)" alt="helper(e_j)"> ，然后引入一条内对角线，与此同时，原本的大多边形也会分裂成两个小多边形。</p><p>需要注意的是左右边界，并不是上方最近的第一个点就是我们要找的 <img src="https://math.jianshu.com/math?formula=helper" alt="helper"> ，因为这个点可能出现在其他小多边形中。所以我们需要维护多个小多边形的边界，并且能够查找和修改。</p>',60),p=[e];function u(g,f){return l(),o("div",null,p)}const b=s(c,[["render",u],["__file","多边形三角剖分 (Triangulation).html.vue"]]);export{b as default};
