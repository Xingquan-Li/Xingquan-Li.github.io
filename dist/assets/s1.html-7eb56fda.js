const t=JSON.parse('{"key":"v-8bf6a5c8","path":"/train/practice/systems/s1.html","title":"S1-数据流处理与分析","lang":"zh-CN","frontmatter":{"title":"S1-数据流处理与分析","order":1},"headers":[{"level":2,"title":"数据流处理与分析","slug":"数据流处理与分析","link":"#数据流处理与分析","children":[{"level":3,"title":"1 问题背景","slug":"_1-问题背景","link":"#_1-问题背景","children":[]},{"level":3,"title":"2 问题描述","slug":"_2-问题描述","link":"#_2-问题描述","children":[]},{"level":3,"title":"3 输入输出","slug":"_3-输入输出","link":"#_3-输入输出","children":[]}]}],"git":{"createdTime":1719138368000,"updatedTime":1719138368000,"contributors":[{"name":"Xingquan-Li","email":"fzulxq@gmail.com","commits":1}]},"readingTime":{"minutes":4.94,"words":1482},"filePathRelative":"train/practice/systems/s1.md","localizedDate":"2024年6月23日","excerpt":"<h2> <strong>数据流处理与分析</strong></h2>\\n<h3> <strong>1 问题背景</strong></h3>\\n<p>合理的逻辑交互设计可以提高系统的可靠性和稳定性，并且能够更好地满足用户的需求。因此，我们需要关注各个模块之间的信息流动和交互方式，保证系统的正常运行和用户的良好体验。对于iEDA项目而言，为了实现不同点工具之间的交互，我们需要关注平台的数据流变化、平台提供的服务、iEDA的各点工具的API接口以及逻辑交互等等。</p>\\n<h3> <strong>2 问题描述</strong></h3>\\n<p>1、<strong>实现要求</strong>：遵循iEDA平台的模块划分，完成以下功能：用iEDA读取gcd设计文件，根据EDA后端设计流程，依次运行iEDA点工具流程，参考现有点工具的报告（report目录下的输出文件，如cts_db.rpt、drc.rpt、drv_db.rpt、filler_db.rpt、fixfanout_db.rpt、fp_db.rpt、hold_db.rpt、lg_db.rpt、pl_db.rpt rt_db.rpt等）输出结果，需要实现对各流程的相关参数（如CORE Usage，IO pin Number，Instance Number，Net Number等等参数）的变化进行汇总，同学们需要设计相应的Json数据结构，来展示各流程的参数变化，Json示例如下，其中示例仅供参考，同学们可以自行设计。</p>","copyright":{"author":"iEDA","license":"GPL-3.0"}}');export{t as data};
