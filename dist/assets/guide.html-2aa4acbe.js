import{_ as e,a as l,b as t,c as i,d as n,e as s,f as d,g as a,h as r,i as c}from"./gui_filler-d8ef23c4.js";import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{o as u,c as g,f as p}from"./app-1ed3f6c2.js";const v={},b=p('<h2 id="ieda概述" tabindex="-1"><a class="header-anchor" href="#ieda概述" aria-hidden="true">#</a> iEDA概述</h2><h3 id="ieda系统部署图" tabindex="-1"><a class="header-anchor" href="#ieda系统部署图" aria-hidden="true">#</a> iEDA系统部署图</h3><div align="center"><img src="'+e+`" style="zoom:40%;"></div><h2 id="工具准备" tabindex="-1"><a class="header-anchor" href="#工具准备" aria-hidden="true">#</a> 工具准备</h2><h3 id="环境" tabindex="-1"><a class="header-anchor" href="#环境" aria-hidden="true">#</a> 环境</h3><ul><li>服务器配置</li><li>操作系统 Ubuntu 20.04.5 LTS</li><li>工艺环境 SkyWater PDK</li></ul><h3 id="编译构建" tabindex="-1"><a class="header-anchor" href="#编译构建" aria-hidden="true">#</a> 编译构建</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载iEDA仓库</span>
<span class="token function">git</span> clone https://gitee.com/oscc-project/iEDA.git iEDA <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> iEDA
<span class="token comment"># 通过apt安装编译依赖，需要root权限</span>
<span class="token function">sudo</span> <span class="token function">bash</span> build.sh <span class="token parameter variable">-i</span> <span class="token function">apt</span>
<span class="token comment"># 编译 iEDA</span>
<span class="token function">bash</span> build.sh <span class="token parameter variable">-j</span> <span class="token number">16</span>
<span class="token comment"># 若能够正常输出 &quot;Hello iEDA!&quot; 则编译成功</span>
./bin/iEDA <span class="token parameter variable">-script</span> scripts/hello.tcl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拷贝 ./bin/iEDA 到目录 ./scripts/design/sky130_gcd</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拷贝 iEDA 到sky130 目录 </span>
<span class="token function">cp</span> ./bin/iEDA scripts/design/sky130_gcd/.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="工艺文件准备" tabindex="-1"><a class="header-anchor" href="#工艺文件准备" aria-hidden="true">#</a> 工艺文件准备</h3><p>下载SkyWater PDK<br> 拷贝TechLEF 文件 和 LEF文件到目录 ./scripts/foundry/sky130/lef</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拷贝 TechLEF 文件到目录 ./scripts/foundry/sky130/lef</span>
<span class="token function">cp</span> <span class="token operator">&lt;</span>skywater130pdk_tlef_path<span class="token operator">&gt;</span>/*.tlef scripts/foundry/sky130/lef/.
<span class="token comment"># 拷贝 LEF 文件到目录 ./scripts/foundry/sky130/lef</span>
<span class="token function">cp</span> <span class="token operator">&lt;</span>skywater130pdk_lef_path<span class="token operator">&gt;</span>/*.lef scripts/foundry/sky130/lef/.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拷贝Lib文件到 ./scripts/foundry/sky130/lib</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拷贝 Lib 文件到目录 ./scripts/foundry/sky130/lib</span>
<span class="token function">cp</span> <span class="token operator">&lt;</span>skywater130pdk_lib_path<span class="token operator">&gt;</span>/*.lib scripts/foundry/sky130/lib/.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>拷贝sdc文件到 ./scripts/foundry/sky130/sdc</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拷贝 sdc 文件到目录 ./scripts/foundry/sky130/sdc</span>
<span class="token function">cp</span> <span class="token operator">&lt;</span>skywater130pdk_sdc_path<span class="token operator">&gt;</span>/*.sdc scripts/foundry/sky130/sdc/.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设计文件准备" tabindex="-1"><a class="header-anchor" href="#设计文件准备" aria-hidden="true">#</a> 设计文件准备</h3><p>拷贝.v Netlist文件到目录 scripts/design/sky130_gcd/result/verilog</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拷贝 .v 文件到目录 ./scripts/design/sky130_gcd/result/verilog</span>
<span class="token function">cp</span> <span class="token operator">&lt;</span>skywater130pdk_verilog_path<span class="token operator">&gt;</span>/gcd.v scripts/design/sky130_gcd/result/verilog/.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="工具流程" tabindex="-1"><a class="header-anchor" href="#工具流程" aria-hidden="true">#</a> 工具流程</h2><p>本文档以跑通skywater PDK 130nm工艺物理后端设计流程作为示例，说明iEDA各个点工具如何配置参数、运行和分析结果。</p><div align="center"><img src="`+l+`" style="zoom:40%;"></div><h3 id="模块划分" tabindex="-1"><a class="header-anchor" href="#模块划分" aria-hidden="true">#</a> 模块划分</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>scripts
├── design                   #iEDA flows for different designs
│   ├── ispd18               #tbd
│   └── sky130_gcd           #flow of gcd in sky130
│       ├── iEDA           
│       ├── iEDA_config      # iEDA parameters configuration files
│       ├── README.md
│       ├── result           # iEDA result output files
│       ├── run_iEDA_gui.py  # Python3 script for running all iEDA flow with GUI layout
│       ├── run_iEDA.py      # Python3 script for running all iEDA flow
│       ├── run_iEDA.sh      # POSIX shell script for running all iEDA flow
│       └── script           # TCL script files
├── foundry
│   ├── README.md
│   └── sky130               # SkyWater Open Source PDK
│       ├── lef              # lef files
│       ├── lib              # lib files
│       ├── sdc              # sdc files
│       └── spef             # folder for spef files if needed
└── hello.tcl                # Test running iEDA

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="script-模块说明" tabindex="-1"><a class="header-anchor" href="#script-模块说明" aria-hidden="true">#</a> script 模块说明</h4><p>script目录包含物理后端设计需要的所有流程脚本和结果分析评估脚本，并且按流程、功能划分好模块；流程脚本可支持顶层自动化运行脚本run_iEDA.py的调用，也可以支持独立运行。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>scripts/design/sky130_gcd/script
├── DB_script                           # Data process flow scripts
│   ├── db_init_lef.tcl                 # initialize lef
│   ├── db_init_lib_drv.tcl             # initialize lib only for flow of drv 
│   ├── db_init_lib_fixfanout.tcl       # initialize lib only for flow of fix fanout
│   ├── db_init_lib_hold.tcl            # initialize lib only for flow of optimize hold
│   ├── db_init_lib_setup.tcl           # initialize lib only for flow of optimize setup
│   ├── db_init_lib.tcl                 # initialize lib for common flow
│   ├── db_init_sdc.tcl                 # initialize sdc 
│   ├── db_init_spef.tcl                # initialize spef
│   ├── db_path_setting.tcl             # set paths for all processing technology files, including TechLEF，LEF, Lib, sdc and spef
│   ├── run_db_checknet.tcl             # check net connectivity based on data built by DEF (.def) and LEF (.lef &amp; .tlef)
│   ├── run_db_report_evl.tcl           # report wire length and congestion based on data built by DEF (.def) and LEF (.lef &amp; .tlef)
│   ├── run_db.tcl                      # test building data by DEF (.def) and LEF (.lef &amp; .tlef)
│   ├── run_def_to_gds_text.tcl         # transform data from DEF (.def) to GDSII (.gdsii)
│   ├── run_def_to_verilog.tcl          # transform data from DEF (.def) to netlist (.v)
│   ├── run_netlist_to_def.tcl          # transform data from netlist (.v) to DEF (.def)
│   └── run_read_verilog.tcl            # test read verilog file (.v)
├── iCTS_script                         # CTS flow scripts
│   ├── run_iCTS_eval.tcl               # report wire legnth for CTS result
│   ├── run_iCTS_STA.tcl                # report CTS STA
│   └── run_iCTS.tcl                    # run CTS
├── iDRC_script                         # DRC(Design Rule Check) flow scipts
│   ├── run_iDRC_gui.tcl                # show GUI for DRC result
│   └── run_iDRC.tcl                    # run DRC
├── iFP_script                          # Floorplan flow scripts
│   ├── module                          # submodule for Floorplan scripts
│   │   ├── create_tracks.tcl           # create tracks for routing layers
│   │   ├── pdn.tcl                     # create pdn networks 
│   │   └── set_clocknet.tcl            # set clock net
│   └── run_iFP.tcl                     # run Floorplan
├── iGUI_script                         # GUI flow scipts
│   └── run_iGUI.tcl                    # run GUI
├── iNO_script                          # NO(Netlist Optimization) flow scipts
│   └── run_iNO_fix_fanout.tcl          # run Fix Fanout
├── iPL_script                          # Placement flow scripts
│   ├── run_iPL_eval.tcl                # report congestion statistics and wire legnth for Placement result
│   ├── run_iPL_filler.tcl              # run standard cell filler
│   ├── run_iPL_gui.tcl                 # run gui flow that shows Global Placement Processing result
│   ├── run_iPL_legalization_eval.tcl   # report congestion statistics and wire legnth for Legalization result
│   ├── run_iPL_legalization.tcl        # run Cell Legalization
│   └── run_iPL.tcl                     # run Placement
├── iRT_script                          # Routing flow scripts
│   ├── run_iRT_DRC.tcl                 # run DRC for Routing result
│   ├── run_iRT_eval.tcl                # report wire legnth for Routing result
│   ├── run_iRT_STA.tcl                 # run STA for Routing result
│   └── run_iRT.tcl                     # run Routing
├── iSTA_script                         # STA flow scripts
│   ├── init_iSTA.tcl                   # STA initialization
│   ├── report_iSTA.tcl                 # report STA result
│   └── run_iSTA.tcl                    # run STA
└── iTO_script                          # TO(Timing Optimization) flow script
    ├── run_iTO_drv_STA.tcl             # run STA for DRV result
    ├── run_iTO_drv.tcl                 # run DRV
    ├── run_iTO_hold_STA.tcl            # run STA for Fix Hold Violation result
    ├── run_iTO_hold.tcl                # run Fix Hold Violation
    ├── run_iTO_setup_STA.tcl           # run STA for Fix Setup Violation result
    └── run_iTO_setup.tcl               # run Fix Setup Violation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行flow" tabindex="-1"><a class="header-anchor" href="#运行flow" aria-hidden="true">#</a> 运行Flow</h3><p>准备好iEDA和工艺文件后，您可以选择自动运行sky130流程脚本，也可以分步骤运行各个点工具脚本，所有的结果都默认保存在script/sky130/result文件夹</p><h4 id="flow基础流程" tabindex="-1"><a class="header-anchor" href="#flow基础流程" aria-hidden="true">#</a> Flow基础流程</h4><p>不管是自动运行顶层 run_iEDA.py 脚本还是单独运行点工具脚本，基于 iEDA 平台设计的脚本都有着相似的步骤，具体流程如下 <code>&lt;br&gt;</code><br><strong>step 1 路径设置</strong><code>&lt;br&gt;</code><br> 首先必须先配置工艺环境路径，为方便查找和配置路径参数，脚本将TechLEF、LEF、Lib、sdc、spef的路径统一在文件 ./script/DB_script/db_path_setting.tcl配置，如下表所示</p><table><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">配置命令</th><th style="text-align:left;">参考 TCL 样例</th></tr></thead><tbody><tr><td style="text-align:left;">设置 TechLef 路径</td><td style="text-align:left;">set TECH_LEF_PATH xxx</td><td style="text-align:left;">set TECH_LEF_PATH &quot;./lef/sky130_fd_sc_hs.tlef&quot;</td></tr><tr><td style="text-align:left;">设置 Lef 路径</td><td style="text-align:left;">set LEF_PATH xxx</td><td style="text-align:left;">set LEF_PATH ./lef/sky130_ef_io__com_bus_slice_10um.lef</td></tr><tr><td style="text-align:left;">设置 Lib 路径</td><td style="text-align:left;">set LIB_PATH xxx</td><td style="text-align:left;">set LIB_PATH ./lib/sky130_dummy_io.lib</td></tr><tr><td style="text-align:left;">设置 Fix Fanout Lib 路径</td><td style="text-align:left;">set LIB_PATH_FIXFANOUT xxx</td><td style="text-align:left;">set LIB_PATH_FIXFANOUT ./lib/sky130_dummy_io.lib</td></tr><tr><td style="text-align:left;">设置 Fix DRV Violation Lib 路径</td><td style="text-align:left;">set LIB_PATH_DRV xxx</td><td style="text-align:left;">set LIB_PATH_DRV ./lib/sky130_dummy_io.lib</td></tr><tr><td style="text-align:left;">设置 Fix Hold Violation Lib 路径</td><td style="text-align:left;">set LIB_PATH_HOLD xxx</td><td style="text-align:left;">set LIB_PATH_HOLD ./lib/sky130_dummy_io.lib</td></tr><tr><td style="text-align:left;">设置 Fix Setup Violation Lib 路径</td><td style="text-align:left;">set LIB_PATH_SETUP xxx</td><td style="text-align:left;">set LIB_PATH_SETUP ./lib/sky130_dummy_io.lib</td></tr><tr><td style="text-align:left;">设置 SDC 路径</td><td style="text-align:left;">set SDC_PATH xxx</td><td style="text-align:left;">set SDC_PATH &quot;./sdc/gcd.sdc&quot;</td></tr><tr><td style="text-align:left;">设置 SPEF 路径</td><td style="text-align:left;">set SPEF_PATH xxx</td><td style="text-align:left;">set SPEF_PATH &quot;./spef/xxx.spef&quot;</td></tr></tbody></table><p><strong>step 2 配置点工具Config</strong><code>&lt;br&gt;</code><br> 所有点工具的参数设置Config都在路径 ./iEDA_config 中，可查看后面章节的 <strong>输入输出一览表</strong> 修改对应的点工具Config文件</p><p><strong>step 3 读 .def 设计文件</strong><code>&lt;br&gt;</code><br> 以 CTS 为例，执行 def_init 命令，读取布局后的结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#===========================================================</span>
<span class="token comment">##   read def</span>
<span class="token comment">#===========================================================</span>
def_init <span class="token parameter variable">-path</span> ./result/iPL_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>步骤 1 - 3 后，Tech LEF、LEF、DEF 文件数据将被加载，这是点工具启动的前提条件</p><p><strong>step 4 启动点工具</strong><code>&lt;br&gt;</code><br> 以 CTS 为例，执行 run_cts 命令，将启动 CTS 流程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#===========================================================</span>
<span class="token comment">##   run CTS</span>
<span class="token comment">#===========================================================</span>
run_cts <span class="token parameter variable">-config</span> ./iEDA_config/cts_default_config.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>step 5 保存点工具运行结果</strong><code>&lt;br&gt;</code><br> 以 CTS 为例，执行完点工具流程后，将点工具运行结果保存在路径 ./result/ 中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#===========================================================</span>
<span class="token comment">##   Save def</span>
<span class="token comment">#===========================================================</span>
def_save <span class="token parameter variable">-path</span> ./result/iCTS_result.def

<span class="token comment">#===========================================================</span>
<span class="token comment">##   Save netlist </span>
<span class="token comment">#===========================================================</span>
netlist_save <span class="token parameter variable">-path</span> ./result/iCTS_result.v <span class="token parameter variable">-exclude_cell_names</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>step 6 输出报告</strong><code>&lt;br&gt;</code><br> 以 CTS 为例，数据存储后，将输出设计结果相关的总体报告，报告路径存储在 ./result/report/ 中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#===========================================================</span>
<span class="token comment">##   report </span>
<span class="token comment">#===========================================================</span>
report_db <span class="token parameter variable">-path</span> <span class="token string">&quot;./result/report/cts_db.rpt&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>step 7 退出</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#===========================================================</span>
<span class="token comment">##   Exit </span>
<span class="token comment">#===========================================================</span>
flow_exit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上步骤为执行单个点工具的一般流程，其中步骤 1 - 3 初始化配置和数据库，为必须的步骤，步骤 4 之后，可以按照需求灵活接入各个点工具或模块命令<code>&lt;br&gt;</code></p><h4 id="报告分析" tabindex="-1"><a class="header-anchor" href="#报告分析" aria-hidden="true">#</a> 报告分析</h4><p>点工具运行完成后，分析报告将存储在路径 ./result/report 中，模块划分如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">报告类型</th><th style="text-align:left;">路径</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Tech LEF、LEF、DEF数据报告</td><td style="text-align:left;">./result/report</td><td style="text-align:left;">分析、统计 Design 文件的数据，并对PR过程单元、线网数据进行详细报告</td></tr><tr><td style="text-align:left;">线长、拥塞评估报告</td><td style="text-align:left;">./result/report/eval</td><td style="text-align:left;">分析、统计点工具输出结果的线长、单元密度、布线拥塞等数据</td></tr><tr><td style="text-align:left;">DRC报告</td><td style="text-align:left;">./result/report/drc</td><td style="text-align:left;">主要检测布线后的DRC违例情况，已支持GUI可视化分析</td></tr></tbody></table><h5 id="基础信息" tabindex="-1"><a class="header-anchor" href="#基础信息" aria-hidden="true">#</a> 基础信息</h5><p>以 CTS 后的结果报告为例<code>&lt;br&gt;</code><br> 查看 CTS 的数据报告，路径在 ./result/report/cts_db.rpt<code>&lt;br&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+-----------------+-----------------------------+
| iEDA            | V23.03-OS-01                |
+-----------------+-----------------------------+
| Stage           | iCTS - Clock Tree Synthesis |
| Runtime         | 2.863340 s                  |
| Memmory         | 5745.216000 MB              |
|                 |                             |
| Design Name     | gcd                         |
| DEF&amp;LEF Version | 5.8                         |
| DBU             | 1000                        |
+-----------------+-----------------------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各标签含义如下表<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">标签</th><th style="text-align:left;">样例值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">iEDA</td><td style="text-align:left;">V23.03-OS-01</td><td style="text-align:left;">iEDA 当前版本号</td></tr><tr><td style="text-align:left;">Stage</td><td style="text-align:left;">iCTS - Clock Tree Synthesis</td><td style="text-align:left;">当前结果的流程阶段，iCTS表示当前结果由 CTS 输出</td></tr><tr><td style="text-align:left;">Runtime</td><td style="text-align:left;">2.863340 s</td><td style="text-align:left;">当前点工具读入数据到保存结果所需运行时间</td></tr><tr><td style="text-align:left;">Memmory</td><td style="text-align:left;">5745.216000 MB</td><td style="text-align:left;">当前点工具读入数据到保存结果所需最大峰值内存</td></tr><tr><td style="text-align:left;">Design Name</td><td style="text-align:left;">gcd</td><td style="text-align:left;">设计名称</td></tr><tr><td style="text-align:left;">DEF&amp;LEF Version</td><td style="text-align:left;">5.8</td><td style="text-align:left;">当前设计的工艺文件版本号</td></tr><tr><td style="text-align:left;">DBU</td><td style="text-align:left;">1000</td><td style="text-align:left;">1 微米含单位长度个数，用于转换 DEF 和 Tech LEF 参数值(DATABASE MICRONS LEFconvertFactor)</td></tr></tbody></table><h5 id="design-数据报告" tabindex="-1"><a class="header-anchor" href="#design-数据报告" aria-hidden="true">#</a> Design 数据报告</h5><p>以 CTS 后的 Design 数据报告为例，以下对报告的各个参数、标签进行说明<code>&lt;br&gt;</code><br> 查看 CTS 的数据报告，路径在 ./result/report/cts_db.rpt<code>&lt;br&gt;</code><br><strong>Summary</strong><code>&lt;br&gt;</code><br> Summary 报告基于 Tech LEF 和 DEF 数据，统计了各个数据类型的基本信息<code>&lt;br&gt;</code><br> 以 CTS 结果的 Summary 为例<code>&lt;br&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>###################################################################
Summary
+------------------------+----------------------------------------+
| Module                 | Value                                  |
+------------------------+----------------------------------------+
| DIE Area ( um^2 )      | 22513.194880 = 149.960000 * 150.128000 |
| DIE Usage              | 0.297306                               |
| CORE Area ( um^2 )     | 16893.489600 = 130.080000 * 129.870000 |
| CORE Usage             | 0.396206                               |
|                        |                                        |
| Number - Site          | 2                                      |
| Number - Row           | 39                                     |
| Number - Track         | 12                                     |
| Number - Layer         | 13                                     |
| Number - Routing Layer | 6                                      |
| Number - Cut Layer     | 5                                      |
| Number - GCell Grid    | 0                                      |
| Number - Cell Master   | 856                                    |
| Number - Via Rule      | 54                                     |
|                        |                                        |
| Number - IO Pin        | 56                                     |
| Number - Instance      | 941                                    |
| Number - Blockage      | 0                                      |
| Number - Filler        | 0                                      |
| Number - Net           | 683                                    |
| Number - Special Net   | 2                                      |
+------------------------+----------------------------------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示</p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">Tech LEF/LEF 关键字段</th><th style="text-align:left;">DEF 关键字段</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">DIE Area ( um^2 )</td><td style="text-align:left;"></td><td style="text-align:left;">DIEAREA</td><td style="text-align:left;">版图 DIE 面积，单位 平方微米</td></tr><tr><td style="text-align:left;">DIE Usage</td><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;">版图 DIE 的利用率，即 Design中所有 Instance 面积 / DIE 面积</td></tr><tr><td style="text-align:left;">CORE Area ( um^2 )</td><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;">版图 CORE 面积， 单位 平方微米, CORE 的面积为所有标准单元ROW的面积之和</td></tr><tr><td style="text-align:left;">CORE Usag</td><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;">版图 CORE 的利用率, 即 Design中所有 Instance 面积 / CORE 面积</td></tr><tr><td style="text-align:left;">Number - Site</td><td style="text-align:left;">SITE</td><td style="text-align:left;"></td><td style="text-align:left;">Tech LEF 中定义的 SITE 的个数</td></tr><tr><td style="text-align:left;">Number - Row</td><td style="text-align:left;"></td><td style="text-align:left;">ROW</td><td style="text-align:left;">版图生成的 标准单元ROW 的个数</td></tr><tr><td style="text-align:left;">Number - Track</td><td style="text-align:left;"></td><td style="text-align:left;">TRACKS</td><td style="text-align:left;">版图生成的 TRACK 的个数</td></tr><tr><td style="text-align:left;">Number - Layer</td><td style="text-align:left;">LAYER</td><td style="text-align:left;"></td><td style="text-align:left;">Tech LEF 中定义的 总层数</td></tr><tr><td style="text-align:left;">Number - Routing Layer</td><td style="text-align:left;">TYPE ROUTING ;</td><td style="text-align:left;"></td><td style="text-align:left;">Tech LEF 中定义的 布线层 层数</td></tr><tr><td style="text-align:left;">Number - Cut Layer</td><td style="text-align:left;">TYPE CUT ;</td><td style="text-align:left;"></td><td style="text-align:left;">Tech LEF 中定义的 通孔层 层数</td></tr><tr><td style="text-align:left;">Number - GCell Grid</td><td style="text-align:left;"></td><td style="text-align:left;">GCELLGRID</td><td style="text-align:left;">版图生成的 GCell Grid 的个数</td></tr><tr><td style="text-align:left;">Number - Cell Master</td><td style="text-align:left;">MACRO</td><td style="text-align:left;"></td><td style="text-align:left;">LEF 中定义的所有 Cell Master 个数，包括宏单元、标准单元、填充单元等</td></tr><tr><td style="text-align:left;">Number - Via Rule</td><td style="text-align:left;">VIA<code>&lt;br&gt;</code> VIARULE</td><td style="text-align:left;">VIAS</td><td style="text-align:left;">LEF 中定义的 Via 个数</td></tr><tr><td style="text-align:left;">Number - IO Pin</td><td style="text-align:left;"></td><td style="text-align:left;">PINS</td><td style="text-align:left;">DEF 中生成的 IO Pin 的个数</td></tr><tr><td style="text-align:left;">Number - Instance</td><td style="text-align:left;"></td><td style="text-align:left;">COMPONENTS</td><td style="text-align:left;">DEF 中生成的所有 Instance 个数</td></tr><tr><td style="text-align:left;">Number - Blockage</td><td style="text-align:left;"></td><td style="text-align:left;">BLOCKAGES</td><td style="text-align:left;">DEF 中生成的所有 Blockage 个数</td></tr><tr><td style="text-align:left;">Number - Filler</td><td style="text-align:left;"></td><td style="text-align:left;">FILLS</td><td style="text-align:left;">DEF 中生成的所有 Filler 个数</td></tr><tr><td style="text-align:left;">Number - Net</td><td style="text-align:left;"></td><td style="text-align:left;">NETS</td><td style="text-align:left;">DEF 中生成的所有 Net 个数</td></tr><tr><td style="text-align:left;">Number - Special Net</td><td style="text-align:left;"></td><td style="text-align:left;">SPECIALNETS</td><td style="text-align:left;">DEF 中生成的所有 Special Net 个数</td></tr></tbody></table><p><strong>Summary - Instance</strong><code>&lt;br&gt;</code><br> 按不同的分类规则，统计所有 Instance 的信息<code>&lt;br&gt;</code><br> 以 CTS 的结果为例<code>&lt;br&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Summary - Instance
+---------------+--------+--------------+------------+------------+
| Type          | Number | Number Ratio | Area       | Area Ratio |
+---------------+--------+--------------+------------+------------+
| All Instances | 941    | 1            | 7161635200 | 1          |
|               |        |              |            |            |
| Netlist       | 648    | 0.688629     | 6693304000 | 0.934606   |
| Physical      | 293    | 0.311371     | 468331200  | 0.0653945  |
| Timing        | 0      | 0            | 0          | 0          |
|               |        |              |            |            |
| Core          | 940    | 0.998937     | 7157635200 | 0.999441   |
| Core - logic  | 647    | 0.687566     | 6689304000 | 0.934047   |
| Pad           | 0      | 0            | 0          | 0          |
| Block         | 0      | 0            | 0          | 0          |
| Endcap        | 0      | 0            | 0          | 0          |
| Cover         | 0      | 0            | 0          | 0          |
| Ring          | 0      | 0            | 0          | 0          |
+---------------+--------+--------------+------------+------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Type</td><td style="text-align:left;">Instance 的类型</td></tr><tr><td style="text-align:left;">Number</td><td style="text-align:left;">统计的 Instance 的个数</td></tr><tr><td style="text-align:left;">Number Ratio</td><td style="text-align:left;">统计的 Instance 个数占比，即 统计的 Instance 个数 / 所有 Instance 个数</td></tr><tr><td style="text-align:left;">Area</td><td style="text-align:left;">统计的 Instance 的总面积</td></tr><tr><td style="text-align:left;">Area Ratio</td><td style="text-align:left;">统计的 Instance 的面积占比， 即 统计的 Instance 总面积 / 所有 Instance 总面积</td></tr></tbody></table><p>其中类型 Type 的分类说明如下<code>&lt;br&gt;</code></p><ul><li>All Instances ： 所有 Instance</li><li>Netlist ： 所有 线网 类型的 Instance，对应关键字为 DEF 里的 COMPONENTS 的 SOURCE 属性为 NETLIST</li><li>Physical :　所有 物理单元 类型的 Instance，对应关键字为 DEF 里的 COMPONENTS 的 SOURCE 属性为 DIST</li><li>Timing :　所有 用于改变线网时序 的 Instance，比如　Buffer，对应关键字为 DEF 里的 COMPONENTS 的 SOURCE 属性为 TIMING</li><li>Core : 所有Core区域内的 标准单元 个数，对应关键字为 LEF 里的 MACRO 的 CLASS 属性为 CORE</li><li>Core - logic : 所有Core区域内的 <strong>非填充单元</strong>的标准单元 个数</li><li>Pad : 所有 I/O Pad Instance，对应关键字为 LEF 里的 MACRO 的 CLASS 属性为 PAD</li><li>Block : 所有 Block Instance，对应关键字为 LEF 里的 MACRO 的 CLASS 属性为 BLOCK</li><li>Endcap : 所有 Endcap Instance，对应关键字为 LEF 里的 MACRO 的 CLASS 属性为 ENDCAP</li><li>Cover : 所有 Cover Instance，对应关键字为 LEF 里的 MACRO 的 CLASS 属性为 COVER</li><li>Ring : 所有 Ring Instance，对应关键字为 LEF 里的 MACRO 的 CLASS 属性为 RING</li></ul><p><strong>Summary - Net</strong><code>&lt;br&gt;</code><br> 按不同的分类规则，统计所有 Net 的信息<code>&lt;br&gt;</code><br> 以 CTS 的结果为例<code>&lt;br&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Summary - Net
+----------------+--------+--------------+--------+--------------+
| Net Type       | Number | Number Ratio | Length | Length Ratio |
+----------------+--------+--------------+--------+--------------+
| All Nets       | 683    | 1            | 0      | 0            |
| Signal         | 674    | 0.986823     | 0      | 0            |
| Clock          | 9      | 0.0131772    | 0      | 0            |
| Power &amp; Ground | 0      | 0            | 0      | 0            |
+----------------+--------+--------------+--------+--------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Net Type</td><td style="text-align:left;">Net 类型</td></tr><tr><td style="text-align:left;">Number</td><td style="text-align:left;">统计的 Net 的个数</td></tr><tr><td style="text-align:left;">Number Ratio</td><td style="text-align:left;">统计的 Net 个数占比，即 统计的 Net 个数 / 所有 Net 个数</td></tr><tr><td style="text-align:left;">Length</td><td style="text-align:left;">统计的 Net 的总面积</td></tr><tr><td style="text-align:left;">Length Ratio</td><td style="text-align:left;">统计的 Net 的线网长度占比， 即 统计的 Net 总长度 / 所有 Net 总长度</td></tr></tbody></table><p>其中类型 Net Type 的分类说明如下<code>&lt;br&gt;</code></p><ul><li>All Nets ： 所有 Net</li><li>Signal ： 所有信号 Net，对应关键字为 DEF 里的 NETS 的 USE 属性为 SIGNAL</li><li>Clock :　所有时钟 Net，对应关键字为 DEF 里的 NETS 的 USE 属性为 CLOCK</li><li>Power &amp; Ground :　所有电源 Net，对应关键字为 DEF 里的 NETS 的 USE 属性为 GROUND 或者 POWER</li></ul><p><strong>Summary - Layer</strong><code>&lt;br&gt;</code><br> 统计所有层的数据信息<code>&lt;br&gt;</code><br> 以 CTS 的结果为例<code>&lt;br&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Summary - Layer
+-------+-------------------+-------------------+------------------+--------------------+---------------------------+---------------------------+--------------------------+
| Layer | Net - Wire Length | Net - Wire Number | Net - Via Number | Net - Patch Number | Special Net - Wire Length | Special Net - Wire Number | Special Net - Via Number |
+-------+-------------------+-------------------+------------------+--------------------+---------------------------+---------------------------+--------------------------+
| nwell | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 0                        |
| pwell | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 0                        |
| li1   | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 0                        |
| mcon  | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 0                        |
| met1  | 0                 | 0                 | 0                | 0                  | 5203200                   | 40                        | 0                        |
| via   | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 180                      |
| met2  | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 0                        |
| via2  | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 180                      |
| met3  | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 0                        |
| via3  | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 180                      |
| met4  | 0                 | 0                 | 0                | 0                  | 1173150                   | 9                         | 0                        |
| via4  | 0                 | 0                 | 0                | 0                  | 0                         | 0                         | 41                       |
| met5  | 0                 | 0                 | 0                | 0                  | 1170720                   | 9                         | 0                        |
+-------+-------------------+-------------------+------------------+--------------------+---------------------------+---------------------------+--------------------------+

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Layer</td><td style="text-align:left;">第n层信息，按从下到上的层顺序递增</td></tr><tr><td style="text-align:left;">Net - Wire Length</td><td style="text-align:left;">统计当前层所有 Net 的总线长</td></tr><tr><td style="text-align:left;">Net - Wire Number</td><td style="text-align:left;">统计当前层所有 Net 的 Wire 类型的Segment数据的总个数</td></tr><tr><td style="text-align:left;">Net - Via Number</td><td style="text-align:left;">统计当前层所有 Net 的 Via 类型的Segment数据的总个数</td></tr><tr><td style="text-align:left;">Net - Patch Number</td><td style="text-align:left;">统计当前层所有 Net 的 Patch 类型的Segment数据的总个数</td></tr><tr><td style="text-align:left;">Special Net - Wire Length</td><td style="text-align:left;">统计当前层所有 Special Net 的总线长</td></tr><tr><td style="text-align:left;">Special Net - Wire Number</td><td style="text-align:left;">统计当前层所有 Special Net 的 Wire 类型的Segment数据的总个数</td></tr><tr><td style="text-align:left;">Special Net - Via Number</td><td style="text-align:left;">统计当前层所有 Special Net 的 Via 类型的Segment数据的总个数</td></tr></tbody></table><p><strong>Summary - Pin Distribution</strong><code>&lt;br&gt;</code><br> 按Pin的个数统计所有的 Net 和 Instance 的分布情况<code>&lt;br&gt;</code><br> 以 CTS 的结果为例<code>&lt;br&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Summary - Pin Distribution
+------------+------------+-----------+-----------------+----------------+
| Pin Number | Net Number | Net Ratio | Instance Number | Instance Ratio |
+------------+------------+-----------+-----------------+----------------+
| 0          | 0          | 0.000000  | 1               | 0.001063       |
| 1          | 0          | 0.000000  | 0               | 0.000000       |
| 2          | 490        | 0.717423  | 0               | 0.000000       |
| 3          | 116        | 0.169839  | 0               | 0.000000       |
| 4          | 20         | 0.029283  | 293             | 0.311371       |
| 5          | 25         | 0.036603  | 0               | 0.000000       |
| 6          | 16         | 0.023426  | 370             | 0.393199       |
| 7          | 0          | 0.000000  | 133             | 0.141339       |
| 8          | 7          | 0.010249  | 117             | 0.124336       |
| 9          | 1          | 0.001464  | 27              | 0.028693       |
| 10         | 0          | 0.000000  | 0               | 0.000000       |
| 11         | 6          | 0.008785  | 0               | 0.000000       |
| 12         | 0          | 0.000000  | 0               | 0.000000       |
| 13         | 1          | 0.001464  | 0               | 0.000000       |
| 14         | 0          | 0.000000  | 0               | 0.000000       |
| 15         | 0          | 0.000000  | 0               | 0.000000       |
| 16         | 0          | 0.000000  | 0               | 0.000000       |
| 17         | 0          | 0.000000  | 0               | 0.000000       |
| 18         | 0          | 0.000000  | 0               | 0.000000       |
| 19         | 0          | 0.000000  | 0               | 0.000000       |
| 20         | 0          | 0.000000  | 0               | 0.000000       |
| 21         | 0          | 0.000000  | 0               | 0.000000       |
| 22         | 0          | 0.000000  | 0               | 0.000000       |
| 23         | 1          | 0.001464  | 0               | 0.000000       |
| 24         | 0          | 0.000000  | 0               | 0.000000       |
| 25         | 0          | 0.000000  | 0               | 0.000000       |
| 26         | 0          | 0.000000  | 0               | 0.000000       |
| 27         | 0          | 0.000000  | 0               | 0.000000       |
| 28         | 0          | 0.000000  | 0               | 0.000000       |
| 29         | 0          | 0.000000  | 0               | 0.000000       |
| 30         | 0          | 0.000000  | 0               | 0.000000       |
| 31         | 0          | 0.000000  | 0               | 0.000000       |
| 32         | 0          | 0.000000  | 0               | 0.000000       |
| &gt;= 32      | 0          | 0.000000  | 0               | 0.000000       |
+------------+------------+-----------+-----------------+----------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Pin Number</td><td style="text-align:left;">当前统计的 Pin 个数</td></tr><tr><td style="text-align:left;">Net Number</td><td style="text-align:left;">统计 Pin 个数相同的的 Net 数量</td></tr><tr><td style="text-align:left;">Net Ratio</td><td style="text-align:left;">统计 Pin 个数相同的的 Net 数量与总 Net 数量的占比 ，即 统计的 Net 个数 / 所有 Net 个数</td></tr><tr><td style="text-align:left;">Instance Number</td><td style="text-align:left;">统计非PDN PIN 的 Pin 个数相同的的 Instance 数量</td></tr><tr><td style="text-align:left;">Instance Ratio</td><td style="text-align:left;">统计的 Instance 数量与总 Instance 数量的占比 ，即 统计的 Instance 个数 / 所有 Instance 个数</td></tr></tbody></table><h5 id="线长、拥塞评估报告" tabindex="-1"><a class="header-anchor" href="#线长、拥塞评估报告" aria-hidden="true">#</a> 线长、拥塞评估报告</h5><p>以 Placement 结果的 Design 线长评估和拥塞评估报告为例，以下对评估报告的各个参数、标签进行说明<code>&lt;br&gt;</code></p><p><strong>Congestion Report</strong><code>&lt;br&gt;</code><br> 查看 Placement 结果的拥塞评估报告，路径在 ./result/report/eval/iPL_result_congestion.rpt<code>&lt;br&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>###################################################################
Congestion Report
+------------------------+---------------+-------------+
| Grid Bin Size          | Bin Partition | Total Count |
+------------------------+---------------+-------------+
| 509 * 508              | 256 by 256    | 65536       |
+------------------------+---------------+-------------+
| Instance Density Range | Bins Count    | Percentage  |
+------------------------+---------------+-------------+
| 0.95 ~ 1.00            | 24738         | 37.75       |
| 0.90 ~ 0.95            | 450           | 0.69        |
| 0.85 ~ 0.90            | 205           | 0.31        |
| 0.80 ~ 0.85            | 352           | 0.54        |
| 0.75 ~ 0.80            | 0             | 0.00        |
+------------------------+---------------+-------------+
| Pin Count Range        | Bins Count    | Percentage  |
+------------------------+---------------+-------------+
| 7 ~ 8                  | 17            | 0.03        |
| 6 ~ 7                  | 50            | 0.08        |
| 6 ~ 6                  | 0             | 0.00        |
| 5 ~ 6                  | 0             | 0.00        |
| 4 ~ 5                  | 388           | 0.59        |
+------------------------+---------------+-------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Grid Bin Size</td><td style="text-align:left;">版图(core)区域所划分网格的：长度 * 宽度</td></tr><tr><td style="text-align:left;">Bin Partition</td><td style="text-align:left;">版图(core)区域所划分网格数：水平数 by 竖直数</td></tr><tr><td style="text-align:left;">Total Count</td><td style="text-align:left;">版图(core)区域所有网格数</td></tr><tr><td style="text-align:left;">Instance Density Range</td><td style="text-align:left;">与网格重叠的单元面积总和除以单个网格面积，用于表征较高密度的网格</td></tr><tr><td style="text-align:left;">Bins Count</td><td style="text-align:left;">对应单元密度的网格数</td></tr><tr><td style="text-align:left;">Percentage</td><td style="text-align:left;">对应单元密度的网格数与所有网格数的比值</td></tr><tr><td style="text-align:left;">Pin Count Range</td><td style="text-align:left;">单个网格内的引脚个数，用于表征较高引脚密度的网格</td></tr><tr><td style="text-align:left;">Bins Count</td><td style="text-align:left;">对应引脚密度的网格数</td></tr><tr><td style="text-align:left;">Percentage</td><td style="text-align:left;">对应引脚密度的网格数与所有网格数的比值</td></tr></tbody></table><p><strong>Wire Length Report</strong><code>&lt;br&gt;</code><br> 查看 Placement 结果的线长评估报告，路径在 ./result/report/eval/iPL_result_wirelength.rpt<code>&lt;br&gt;</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>###################################################################
Wire Length Report
+-------------------+--------------+----------------+------------------+----------------+
| Wire-length Model | Total Length | Average Length | Longest Net Name | Longest Length |
+-------------------+--------------+----------------+------------------+----------------+
| HPWL              | 9944165      | 14732          | clk              | 214845         |
| Bound2Bound       | 10618154     | 15730          | clk              | 315427         |
| Flute             | 10672566     | 15811          | clk              | 441165         |
+-------------------+--------------+----------------+------------------+----------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Wire-length Model</td><td style="text-align:left;">计算线长的方法，目前支持三种线长计算方法，包括 HPWL、Bound2Bound、Flute</td></tr><tr><td style="text-align:left;">Total Length</td><td style="text-align:left;">统计所有 Net 的总线长</td></tr><tr><td style="text-align:left;">Average Length</td><td style="text-align:left;">所有线网的平均线长，即 统计所有 Net 的总线长 / 所有 Net 个数</td></tr><tr><td style="text-align:left;">Longest Net Name</td><td style="text-align:left;">线长最大的 Net 名称</td></tr><tr><td style="text-align:left;">Longest Length</td><td style="text-align:left;">线长最大的 Net 线长</td></tr></tbody></table><h5 id="drc违例报告" tabindex="-1"><a class="header-anchor" href="#drc违例报告" aria-hidden="true">#</a> DRC违例报告</h5><p>以 Routing 结果的 Design DRC报告为例，以下对报告的各个参数、标签进行说明<code>&lt;br&gt;</code><br> 查看 Routing 结果的DRC检测报告，路径在 ./result/report/drc/iRT_drc.rpt<code>&lt;br&gt;</code></p><p><strong>Drc Summary</strong><code>&lt;br&gt;</code><br> DRC 违例分布统计如下表所示</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>###################################################################
Drc Summary
+-----------------------------------+------------+
| DRC Type                          | Number     |
+-----------------------------------+------------+
| Cut Different Layer Spacing       | 0          |
| Cut EOL Spacing                   | 0          |
| Cut Enclosure                     | 537550672  |
| Cut EnclosureEdge                 | 1159733280 |
| Cut Spacing                       | 0          |
| Metal Corner Filling Spacing      | 892941358  |
| Metal EOL Spacing                 | 0          |
| Metal JogToJog Spacing            | 540357424  |
| Metal Notch Spacing               | 775040288  |
| Metal Parallel Run Length Spacing | 1663       |
| Metal Short                       | 747        |
| MinHole                           | 173298255  |
| MinStep                           | 1344282656 |
| Minimal Area                      | 808595560  |
+-----------------------------------+------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">DRC Type</td><td style="text-align:left;">DRC 检测规则类型</td></tr><tr><td style="text-align:left;">Number</td><td style="text-align:left;">DRC 违例数量</td></tr></tbody></table><p>其中类型 DRC Type 的分类说明如下<code>&lt;br&gt;</code></p><ul><li>Cut Different Layer Spacing ：</li><li>Cut EOL Spacing ：</li><li>Cut Enclosure :</li><li>Cut EnclosureEdge :</li><li>Cut Spacing :</li><li>Metal Corner Filling Spacing :</li><li>Metal EOL Spacing :</li><li>Metal JogToJog Spacing :</li><li>Metal Notch Spacing :</li><li>Metal Parallel Run Length Spacing :</li><li>Metal Short :</li><li>MinHole :</li><li>MinStep :</li><li>Minimal Area :</li></ul><p><strong>Connectivity Summary</strong><code>&lt;br&gt;</code><br> 检测所有 Net 的连通性</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Connectivity Summary
+------------------------------------+----------+
| Connectivity Check                 | Number   |
+------------------------------------+----------+
| Disconneted nets [pin number &gt;= 2] | 38 / 683 |
| Disconneted nets [pin number &lt; 2]  | 0 / 683  |
+------------------------------------+----------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报告的参数说明如下表所示<code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Connectivity Check</td><td style="text-align:left;">未连通的 Net 类别，按 Net 中包含的 Pin 个数进行分别统计</td></tr><tr><td style="text-align:left;">Number</td><td style="text-align:left;">未连通的 Net 数量和总 Net 数量 比值</td></tr></tbody></table><p><strong>DRC - Disconnected Net</strong><code>&lt;br&gt;</code><br> 记录未连通的所有 Net 名称</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DRC - Disconnected Net
+------------------+
| Disconnected Net |
+------------------+
| req_rdy          |
| resp_val         |
| req_val          |
| resp_rdy         |
| reset            |
| clk              |
| req_msg[16]      |
| req_msg[17]      |
| req_msg[18]      |
| req_msg[19]      |
| req_msg[20]      |
| req_msg[21]      |
| req_msg[22]      |
| req_msg[23]      |
| req_msg[24]      |
| req_msg[25]      |
| req_msg[26]      |
| req_msg[27]      |
| req_msg[28]      |
| req_msg[29]      |
| req_msg[30]      |
| req_msg[31]      |
| req_msg[0]       |
| req_msg[1]       |
| req_msg[2]       |
| req_msg[3]       |
| req_msg[4]       |
| req_msg[5]       |
| req_msg[6]       |
| req_msg[7]       |
| req_msg[8]       |
| req_msg[10]      |
| req_msg[9]       |
| req_msg[11]      |
| req_msg[12]      |
| req_msg[14]      |
| req_msg[13]      |
| req_msg[15]      |
|                  |
+------------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="物理后端设计全流程运行" tabindex="-1"><a class="header-anchor" href="#物理后端设计全流程运行" aria-hidden="true">#</a> 物理后端设计全流程运行</h4><p>运行sky130目录的run_iEDA.py，将自动运行从读取.v Netlist文件到最后生成 .gdsii GDSII文件的全流程，全流程使用默认参数，所有运行结果将保存在scripts/design/sky130_gcd/result目录下，详细的功能描述、参数配置、输入、输出和报告等可查看点工具运行。</p><h5 id="运行脚本" tabindex="-1"><a class="header-anchor" href="#运行脚本" aria-hidden="true">#</a> 运行脚本</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 切换目录到sky130</span>
<span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>sky130 path<span class="token operator">&gt;</span>
<span class="token comment"># 运行自动化流程脚本</span>
./run_iEDA.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="输入输出一览表" tabindex="-1"><a class="header-anchor" href="#输入输出一览表" aria-hidden="true">#</a> 输入输出一览表</h5><p>全流程自动运行，前后流程的输入、输出已在脚本中配置好且存在先后依赖关系，如下表所示</p><table><thead><tr><th style="text-align:left;">Flow</th><th style="text-align:left;">Script</th><th style="text-align:left;">Config</th><th style="text-align:left;">Design Input</th><th style="text-align:left;">Design Output</th><th style="text-align:left;">Report</th></tr></thead><tbody><tr><td style="text-align:left;">布图规划 (Floorpan)</td><td style="text-align:left;">./iEDA -script ./script/iFP_script/run_iFP.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/verilog/gcd.v</td><td style="text-align:left;">./result/iFP_result.def<code>&lt;br&gt;</code> ./result/iFP_result.v</td><td style="text-align:left;">./result/report/fp_db.rpt</td></tr><tr><td style="text-align:left;">网表优化（Fix Fanout）</td><td style="text-align:left;">./iEDA -script ./script/iNO_script/run_iNO_fix_fanout.tcl</td><td style="text-align:left;">./iEDA_config/cts_default_config.json</td><td style="text-align:left;">./result/iFP_result.def</td><td style="text-align:left;">./result/iTO_fix_fanout_result.def<code>&lt;br&gt;</code> ./result/iTO_fix_fanout_result.v</td><td style="text-align:left;">./result/report/fixfanout_db.rpt</td></tr><tr><td style="text-align:left;">布局 (Placement)</td><td style="text-align:left;">./iEDA -script ./script/iPL_script/run_iPL.tcl</td><td style="text-align:left;">./iEDA_config/pl_default_config.json</td><td style="text-align:left;">./result/iTO_fix_fanout_result.def</td><td style="text-align:left;">./result/iPL_result.def<code>&lt;br&gt;</code> ./result/iPL_result.v</td><td style="text-align:left;">./result/report/pl_db.rpt</td></tr><tr><td style="text-align:left;">布局结果评估 (评估线长和拥塞)</td><td style="text-align:left;">./iEDA -script ./script/iPL_script/run_iPL_eval.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iPL_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/report/eval/iPL_result_wirelength.rpt<code>&lt;br&gt;</code> ./result/report/eval/iPL_result_congestion.rpt</td></tr><tr><td style="text-align:left;">时钟树综合 (CTS)</td><td style="text-align:left;">./iEDA -script ./script/iCTS_script/run_iCTS.tcl</td><td style="text-align:left;">./iEDA_config/cts_default_config.json</td><td style="text-align:left;">./result/iPL_result.def</td><td style="text-align:left;">./result/iCTS_result.def<code>&lt;br&gt;</code> ./result/iCTS_result.v</td><td style="text-align:left;">./result/report/cts_db.rpt</td></tr><tr><td style="text-align:left;">时钟树综合结果评估 (评估线长)</td><td style="text-align:left;">./iEDA -script ./script/iCTS_script/run_iCTS_eval.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iCTS_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/report/eval/iCTS_result_wirelength.rpt</td></tr><tr><td style="text-align:left;">时钟树综合时序评估 (评估时序)</td><td style="text-align:left;">./iEDA -script ./script/iCTS_script/run_iCTS_STA.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iCTS_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/cts/sta/</td></tr><tr><td style="text-align:left;">修复DRV违例 (Fix DRV Violation)</td><td style="text-align:left;">./iEDA -script ./script/iTO_script/run_iTO_drv.tcl</td><td style="text-align:left;">./iEDA_config/to_default_config_drv.json</td><td style="text-align:left;">./result/iCTS_result.def</td><td style="text-align:left;">./result/iTO_drv_result.def<code>&lt;br&gt;</code> ./result/iTO_drv_result.v</td><td style="text-align:left;">./result/report/drv_db.rpt</td></tr><tr><td style="text-align:left;">Fix DRV结果评估 (评估时序)</td><td style="text-align:left;">./iEDA -script ./script/iTO_script/run_iTO_drv_STA.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iTO_drv_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/to/drv/sta/</td></tr><tr><td style="text-align:left;">修复Hold违例（Fix Hold Violation）</td><td style="text-align:left;">./iEDA -script ./script/iTO_script/run_iTO_hold.tcl</td><td style="text-align:left;">./iEDA_config/to_default_config_hold.json</td><td style="text-align:left;">./result/iTO_drv_result.def</td><td style="text-align:left;">./result/iTO_hold_result.def<code>&lt;br&gt;</code> ./result/iTO_hold_result.v</td><td style="text-align:left;">./result/report/hold_db.rpt</td></tr><tr><td style="text-align:left;">Fix Hold结果评估（评估时序）</td><td style="text-align:left;">./iEDA -script ./script/iTO_script/run_iTO_hold_STA.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iTO_hold_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/to/hold/sta/</td></tr><tr><td style="text-align:left;">单元合法化（Legalization）</td><td style="text-align:left;">./iEDA -script ./script/iPL_script/run_iPL_legalization.tcl</td><td style="text-align:left;">./iEDA_config/pl_default_config.json</td><td style="text-align:left;">./result/iTO_hold_result.def</td><td style="text-align:left;">./result/iPL_lg_result.def<code>&lt;br&gt;</code> ./result/iPL_lg_result.v</td><td style="text-align:left;">./result/report/lg_db.rpt</td></tr><tr><td style="text-align:left;">合法化结果评估（评估线长和拥塞）</td><td style="text-align:left;">./iEDA -script ./script/iPL_script/run_iPL_legalization_eval.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iPL_lg_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/report/eval/iPL_lg_result_wirelength.rpt<code>&lt;br&gt;</code> ./result/report/eval/iPL_lg_result_congestion.rpt</td></tr><tr><td style="text-align:left;">布线 （Routing）</td><td style="text-align:left;">./iEDA -script ./script/iRT_script/run_iRT.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iPL_lg_result.def</td><td style="text-align:left;">./result/iRT_result.def ./result/iRT_result.v</td><td style="text-align:left;">./result/report/rt_db.rpt</td></tr><tr><td style="text-align:left;">布线结果评估（评估线长）</td><td style="text-align:left;">./iEDA -script ./script/iRT_script/run_iRT_eval.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iRT_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/report/eval/iRT_result_wirelength.rpt</td></tr><tr><td style="text-align:left;">布线结果评估 （评估时序）</td><td style="text-align:left;">./iEDA -script ./script/iRT_script/run_iRT_STA.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iRT_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/rt/sta/</td></tr><tr><td style="text-align:left;">布线结果DRC</td><td style="text-align:left;">./iEDA -script ./script/iRT_script/run_iRT_DRC.tcl</td><td style="text-align:left;">./iEDA_config/drc_default_config.json</td><td style="text-align:left;">./result/iRT_result.def</td><td style="text-align:left;"></td><td style="text-align:left;">./result/report/drc/iRT_drc.rpt</td></tr><tr><td style="text-align:left;">单元填充 （Filler）</td><td style="text-align:left;">./iEDA -script ./script/iPL_script/run_iPL_filler.tcl</td><td style="text-align:left;">./iEDA_config/pl_default_config.json</td><td style="text-align:left;">./result/iRT_result.def</td><td style="text-align:left;">./result/iPL_filler_result.def<code>&lt;br&gt;</code> ./result/iPL_filler_result.v</td><td style="text-align:left;">./result/report/filler_db.rpt</td></tr><tr><td style="text-align:left;">DEF转GDSII</td><td style="text-align:left;">./iEDA -script ./script/DB_script/run_def_to_gds_text.tcl</td><td style="text-align:left;"></td><td style="text-align:left;">./result/iPL_filler_result.def</td><td style="text-align:left;">./result/final_design.gds2</td><td style="text-align:left;"></td></tr></tbody></table><h4 id="布图规划-floorplan" tabindex="-1"><a class="header-anchor" href="#布图规划-floorplan" aria-hidden="true">#</a> 布图规划 (Floorplan)</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iFP_script/run_iFP.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code><br> 无</p><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/verilog/gcd.v</li></ul><p><strong>输出</strong></p><ul><li>./result/iFP_result.def</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/fp_db.rpt</li></ul><p><strong>GUI</strong><code>&lt;br&gt;</code><br> step 1：修改脚本 ./script/iGUI_script/run_iGUI.tcl 的输入设计 def 为 ./result/iFP_result.def</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#===========================================================
##   read def
#===========================================================
def_init -path ./result/iFP_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>step 2: 执行iEDA GUI脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA_gui <span class="token parameter variable">-script</span> ./script/iGUI_script/run_iGUI.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>step 3: 查看GUI</p><p>初始版图</p><div align="center"><img src="`+t+'" style="zoom:50%;"></div><p>PDN</p><div align="center"><img src="'+i+`" style="zoom:50%;"></div><h4 id="网表优化-fix-fanout" tabindex="-1"><a class="header-anchor" href="#网表优化-fix-fanout" aria-hidden="true">#</a> 网表优化（Fix Fanout）</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iNO_script/run_iNO_fix_fanout.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code><br> 参数配置的路径在 ./iEDA_config/no_default_config_fixfanout.json，如下所示</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;file_path&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;design_work_space&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./result/no&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sdc_file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;lib_files&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;lef_files&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;def_file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;output_def&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;report_file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./result/no/report.txt&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;insert_buffer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sky130_fd_sc_hs__buf_8&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;max_fanout&quot;</span><span class="token operator">:</span> <span class="token number">30</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可配置参数定义如下</p><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">design_work_space</td><td style="text-align:left;">./result/no</td><td style="text-align:left;">设置 Fix Fanout 运行过程的工作区路径</td></tr><tr><td style="text-align:left;">sdc_file</td><td style="text-align:left;"></td><td style="text-align:left;">无效参数，后续删除</td></tr><tr><td style="text-align:left;">lib_files</td><td style="text-align:left;"></td><td style="text-align:left;">无效参数，后续删除</td></tr><tr><td style="text-align:left;">lef_files</td><td style="text-align:left;"></td><td style="text-align:left;">无效参数，后续删除</td></tr><tr><td style="text-align:left;">def_file</td><td style="text-align:left;"></td><td style="text-align:left;">无效参数，后续删除</td></tr><tr><td style="text-align:left;">output_def</td><td style="text-align:left;"></td><td style="text-align:left;">无效参数，后续删除</td></tr><tr><td style="text-align:left;">report_file</td><td style="text-align:left;">./result/no/report.txt</td><td style="text-align:left;">Fix Fanout 过程中产生的报告</td></tr><tr><td style="text-align:left;">insert_buffer</td><td style="text-align:left;">sky130_fd_sc_hs__buf_8</td><td style="text-align:left;">设置插入的 buffer 名称</td></tr><tr><td style="text-align:left;">max_fanout</td><td style="text-align:left;">30</td><td style="text-align:left;">最大Fanout数量</td></tr></tbody></table><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iFP_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/iTO_fix_fanout_result.def</li><li>./result/iTO_fix_fanout_result.v</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/fixfanout_db.rpt</li></ul><p><strong>GUI</strong><code>&lt;br&gt;</code><br> step 1：修改脚本 ./script/iGUI_script/run_iGUI.tcl 的输入设计 def 为 ./result/iTO_fix_fanout_result.def</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#===========================================================
##   read def
#===========================================================
def_init -path ./result/iTO_fix_fanout_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>step 2: 执行iEDA GUI脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA_gui <span class="token parameter variable">-script</span> ./script/iGUI_script/run_iGUI.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>step 3: 查看GUI</p><div align="center"><img src="`+n+`" style="zoom:50%;"></div><h4 id="布局-placement" tabindex="-1"><a class="header-anchor" href="#布局-placement" aria-hidden="true">#</a> 布局 (Placement)</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iPL_script/run_iPL.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code><br> 参考iEDA_config/pl_default_config.json: <code>./scripts/design/sky130_gcd/iEDA_config/pl_default_config.json</code></p><table><thead><tr><th>JSON参数</th><th>功能说明</th><th>参数范围</th><th>默认值</th></tr></thead><tbody><tr><td>is_max_length_opt</td><td>是否开启最大线长优化</td><td>[0,1]</td><td>0</td></tr><tr><td>max_length_constraint</td><td>指定最大线长</td><td>[0-1000000]</td><td>1000000</td></tr><tr><td>is_timing_effort</td><td>是否开启时序优化模式</td><td>[0,1]</td><td>0</td></tr><tr><td>is_congestion_effort</td><td>是否开启可布线性优化模式</td><td></td><td></td></tr><tr><td>ignore_net_degree</td><td>忽略超过指定pin个数的线网</td><td>[10-10000]</td><td>100</td></tr><tr><td>num_threads</td><td>指定的CPU线程数</td><td>[1-64]</td><td>8</td></tr><tr><td>[GP-Wirelength] init_wirelength_coef</td><td>设置初始线长系数</td><td>[0.0-1.0]</td><td>0.25</td></tr><tr><td>[GP-Wirelength] reference_hpwl</td><td>调整密度惩罚的参考线长</td><td>[100-1000000]</td><td>446000000</td></tr><tr><td>[GP-Wirelength] min_wirelength_force_bar</td><td>控制线长边界</td><td>[-1000-0]</td><td>-300</td></tr><tr><td>[GP-Density] target_density</td><td>指定的目标密度</td><td>[0.0-1.0]</td><td>0.8</td></tr><tr><td>[GP-Density] bin_cnt_x</td><td>指定水平方向上Bin的个数</td><td>[16,32,64,128,256,512,1024]</td><td>512</td></tr><tr><td>[GP-Density] bin_cnt_y</td><td>指定垂直方向上Bin的个数</td><td>[16,32,64,128,256,512,1024]</td><td>512</td></tr><tr><td>[GP-Nesterov] max_iter</td><td>指定最大的迭代次数</td><td>[50-2000]</td><td>2000</td></tr><tr><td>[GP-Nesterov] max_backtrack</td><td>指定最大的回溯次数</td><td>[0-100]</td><td>10</td></tr><tr><td>[GP-Nesterov] init_density_penalty</td><td>指定初始状态的密度惩罚</td><td>[0.0-1.0]</td><td>0.00008</td></tr><tr><td>[GP-Nesterov] target_overflow</td><td>指定目标的溢出值</td><td>[0.0-1.0]</td><td>0.1</td></tr><tr><td>[GP-Nesterov] initial_prev_coordi_update_coef</td><td>初始扰动坐标时的系数</td><td>[10-10000]</td><td>100</td></tr><tr><td>[GP-Nesterov] min_precondition</td><td>设置precondition的最小值</td><td>[1-100]</td><td>1</td></tr><tr><td>[GP-Nesterov] min_phi_coef</td><td>设置最小的phi参数</td><td>[0.0-1.0]</td><td>0.95</td></tr><tr><td>[GP-Nesterov] max_phi_coef</td><td>设置最大的phi参数</td><td>[0.0-1.0]</td><td>1.05</td></tr><tr><td>[BUFFER] max_buffer_num</td><td>指定限制最大buffer插入个数</td><td>[0-1000000]</td><td>35000</td></tr><tr><td>[BUFFER] buffer_type</td><td>指定可插入的buffer类型名字</td><td>工艺相关</td><td>列表[...,...]</td></tr><tr><td>[LG] max_displacement</td><td>指定单元的最大移动量</td><td>[10000-1000000]</td><td>50000</td></tr><tr><td>[LG] global_right_padding</td><td>指定单元间的间距（以Site为单位）</td><td>[0,1,2,3,4...]</td><td>1</td></tr><tr><td>[DP] max_displacement</td><td>指定单元的最大移动量</td><td>[10000-1000000]</td><td>50000</td></tr><tr><td>[DP] global_right_padding</td><td>指定单元间的间距（以Site为单位）</td><td>[0,1,2,3,4...]</td><td>1</td></tr><tr><td>[Filler] first_iter</td><td>指定第一轮迭代使用的Filler</td><td>工艺相关</td><td>列表[...,...]</td></tr><tr><td>[Filler] second_iter</td><td>指定第二轮迭代使用的Filler</td><td>工艺相关</td><td>列表[...,...]</td></tr><tr><td>[Filler] min_filler_width</td><td>指定Filler的最小宽度（以Site为单位）</td><td>工艺相关</td><td>1</td></tr><tr><td>[MP] fixed_macro</td><td>指定固定的宏单元 (string macro_name)</td><td>设计相关</td><td>列表[...,...]</td></tr><tr><td>[MP] fixed_macro_coordinate</td><td>指定固定宏单元的位置坐标（int location_x, int location_y）</td><td>设计相关</td><td>列表[...,...]</td></tr><tr><td>[MP] blockage</td><td>指定宏单元阻塞矩形区域，宏单元应该避免摆放在该区域（int left_bottom_x, int left_bottom_y, int right_top_x, int right_top_y)</td><td>设计相关</td><td>列表[...,...]</td></tr><tr><td>[MP] guidance_macro</td><td>指定指导摆放宏单元，每个宏单元可以设置期望摆放的区域 (string macro_name)</td><td>设计相关</td><td>列表[...,...]</td></tr><tr><td>[MP] guidance</td><td>指定对应宏单元的指导摆放区域（int left_bottom_x, int left_bottom_y, int right_top_x, int right_top_y）</td><td>设计相关</td><td>列表[...,...]</td></tr><tr><td>[MP] solution_type</td><td>指定解的表示方式</td><td>[&quot;BStarTree&quot;,&quot;SequencePair&quot;]</td><td>&quot;BStarTree&quot;</td></tr><tr><td>[MP] perturb_per_step</td><td>指定模拟退火每步扰动次数</td><td>[10-1000]</td><td>100</td></tr><tr><td>[MP] cool_rate</td><td>指定模拟退火温度冷却率</td><td>[0.0-1.0]</td><td>0.92</td></tr><tr><td>[MP] parts</td><td>指定标准单元划分数（int)</td><td>[10-100]</td><td>66</td></tr><tr><td>[MP] ufactor</td><td>指定标准单元划分不平衡值 (int)</td><td>[10-1000]</td><td>100</td></tr><tr><td>[MP] new_macro_density</td><td>指定虚拟宏单元密度</td><td>[0.0-1.0]</td><td>0.6</td></tr><tr><td>[MP] halo_x</td><td>指定宏单元的halo（横向）</td><td>[0-1000000]</td><td>0</td></tr><tr><td>[MP] halo_y</td><td>指定宏单元的halo（纵向）</td><td>[0-1000000]</td><td>0</td></tr><tr><td>[MP] output_path</td><td>指定输出文件路径</td><td></td><td>&quot;./result/pl&quot;</td></tr></tbody></table><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iTO_fix_fanout_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/iPL_result.def</li><li>./result/iPL_result.v</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/pl_db.rpt</li></ul><p>iPL工具的中间报告默认存放在目录：<code>./scripts/design/sky130_gcd/result/pl/</code></p><ul><li>report/violation_record.txt ：布局违例的单元</li><li>report/wirelength_record.txt ：布局的HPWL线长、STWL线长以及长线线长统计</li><li>report/density_record.txt ：布局的峰值bin密度</li><li>report/timing_record.txt ：布局的时序信息（wns、tns），调用Flute进行简易绕线</li></ul><p><strong>GUI</strong><code>&lt;br&gt;</code><br> step 1：修改脚本 ./script/iGUI_script/run_iGUI.tcl 的输入设计 def 为 ./result/iPL_result.def</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#===========================================================
##   read def
#===========================================================
def_init -path ./result/iPL_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>step 2: 执行iEDA GUI脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA_gui <span class="token parameter variable">-script</span> ./script/iGUI_script/run_iGUI.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>step 3: 查看GUI</p><div align="center"><img src="`+s+`" style="zoom:50%;"></div><h4 id="时钟树综合-cts" tabindex="-1"><a class="header-anchor" href="#时钟树综合-cts" aria-hidden="true">#</a> 时钟树综合 (CTS)</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iCTS_script/run_iCTS.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code></p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">skew_bound</td><td style="text-align:center;">浮点字符串</td><td style="text-align:center;">时钟源到达各个寄存器的最大时钟偏差</td></tr><tr><td style="text-align:center;">max_buf_tran</td><td style="text-align:center;">浮点字符串</td><td style="text-align:center;">缓冲器最大转换时间约束</td></tr><tr><td style="text-align:center;">max_sink_tran</td><td style="text-align:center;">浮点字符串</td><td style="text-align:center;">寄存器最大转换时间约束</td></tr><tr><td style="text-align:center;">max_cap</td><td style="text-align:center;">浮点字符串</td><td style="text-align:center;">最大负载电容约束</td></tr><tr><td style="text-align:center;">max_fanout</td><td style="text-align:center;">整型字符串</td><td style="text-align:center;">最大扇出约束</td></tr><tr><td style="text-align:center;">max_length</td><td style="text-align:center;">整型字符串</td><td style="text-align:center;">最大线网线长约束</td></tr><tr><td style="text-align:center;">scale_size</td><td style="text-align:center;">整型</td><td style="text-align:center;">用于减小规模加速时钟树构建的划分程度</td></tr><tr><td style="text-align:center;">buffer_type</td><td style="text-align:center;">字符串列表</td><td style="text-align:center;">用于指定时钟树综合阶段可用的缓冲器类型列表</td></tr><tr><td style="text-align:center;">routing_layer</td><td style="text-align:center;">整型列表</td><td style="text-align:center;">指定时钟绕线层以获取单位电容、电阻信息</td></tr><tr><td style="text-align:center;">use_netlist</td><td style="text-align:center;">字符串（&quot;ON&quot; or &quot;OFF&quot;）</td><td style="text-align:center;">是否只对&quot;net_list&quot;中的线网进行时钟树综合，若该参数为&quot;OFF&quot;则默认对所有时钟线长进行时钟树综合</td></tr><tr><td style="text-align:center;">net_list</td><td style="text-align:center;">字符串字典列表</td><td style="text-align:center;">指定需要进行时钟树构建的线网</td></tr></tbody></table><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iPL_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/iCTS_result.def</li><li>./result/iCTS_result.v</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/cts_db.rpt</li></ul><p><strong>GUI</strong><code>&lt;br&gt;</code><br> step 1：修改脚本 ./script/iGUI_script/run_iGUI.tcl 的输入设计 def 为 ./result/iCTS_result.def</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#===========================================================
##   read def
#===========================================================
def_init -path ./result/iCTS_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>step 2: 执行iEDA GUI脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA_gui <span class="token parameter variable">-script</span> ./script/iGUI_script/run_iGUI.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>step 3: 查看GUI</p><div align="center"><img src="`+d+`" style="zoom:50%;"></div><h4 id="修复drv违例-fix-drv-violation" tabindex="-1"><a class="header-anchor" href="#修复drv违例-fix-drv-violation" aria-hidden="true">#</a> 修复DRV违例 (Fix DRV Violation)</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iTO_script/run_iTO_drv.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code></p><p>参考&quot;./scripts/design/sky130_gcd/iEDA_config/to_default_config_drv.json&quot;</p><div><a name="drv_tab"></a><table><thead><tr><th>参数名</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>design_work_space</td><td>./result/to</td><td>设置运行过程的工作区路径</td></tr><tr><td>sdc_file</td><td></td><td>无效参数，后续删除</td></tr><tr><td>lib_files</td><td></td><td>无效参数，后续删除</td></tr><tr><td>lef_files</td><td></td><td>无效参数，后续删除</td></tr><tr><td>def_file</td><td></td><td>无效参数，后续删除</td></tr><tr><td>output_def</td><td></td><td>无效参数，后续删除</td></tr><tr><td>report_file</td><td>./result/to/report.txt</td><td>优化过程产生的报告</td></tr><tr><td>gds_file</td><td>./result/to/to.gds</td><td>生成的GDS文件路径，默认不会生成该文件</td></tr><tr><td>setup_slack_margin</td><td>0.0</td><td>setup slack小于该值时认为违例，也是slack优化的目标</td></tr><tr><td>hold_slack_margin</td><td>0.0</td><td>hold slack小于该值时认为违例，也是slack优化的目标</td></tr><tr><td>max_buffer_percent</td><td>0.2</td><td>缓冲器插入的面积占芯片面积的最大比例</td></tr><tr><td>max_utilization</td><td>0.8</td><td>缓冲器插入后的面积+其他单元的面积，占芯片面积的最大比例</td></tr><tr><td>DRV_insert_buffers</td><td>sky130_fd_sc_hs__buf_8</td><td>优化DRV时使用的缓冲器（需要针对设计指定），为空时会自动从缓冲器库中选择</td></tr><tr><td>setup_insert_buffers</td><td>sky130_fd_sc_hs__buf_8</td><td>优化setup时使用的缓冲器（需要针对设计指定），为空时会自动从缓冲器库中选择</td></tr><tr><td>hold_insert_buffers</td><td>sky130_fd_sc_hs__buf_8</td><td>优化hold时使用的缓冲器（需要针对设计指定），为空时会自动从缓冲器库中选择</td></tr><tr><td>number_passes_allowed_decreasing_slack</td><td>5</td><td>迭代优化setup时，允许WNS不断变差的最大连续迭代次数</td></tr><tr><td>rebuffer_max_fanout</td><td>20</td><td>针对setup，线网的fanout超过该值时不会对其进行缓冲器插入优化</td></tr><tr><td>split_load_min_fanout</td><td>8</td><td>针对setup，线网的fanout大于该值时通过插入缓冲器把fanout降低</td></tr></tbody></table></div><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iCTS_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/iTO_drv_result.def</li><li>./result/iTO_drv_result.v</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/drv_db.rpt</li></ul><h4 id="修复hold违例-fix-hold-violation" tabindex="-1"><a class="header-anchor" href="#修复hold违例-fix-hold-violation" aria-hidden="true">#</a> 修复Hold违例（Fix Hold Violation）</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iTO_script/run_iTO_hold.tcl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code></p><p>参考&quot;./scripts/design/sky130_gcd/iEDA_config/to_default_config_hold.json&quot;</p><p>参数详细信息同<a href="#drv_tab">修复DRV违例</a></p><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iTO_drv_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/iTO_hold_result.def</li><li>./result/iTO_hold_result.v</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/hold_db.rpt</li></ul><h4 id="单元合法化-legalization" tabindex="-1"><a class="header-anchor" href="#单元合法化-legalization" aria-hidden="true">#</a> 单元合法化（Legalization）</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iPL_script/run_iPL_legalization.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code></p><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iTO_hold_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/iPL_lg_result.def</li><li>./result/iPL_lg_result.v</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/lg_db.rpt</li></ul><p><strong>GUI</strong><code>&lt;br&gt;</code><br> step 1：修改脚本 ./script/iGUI_script/run_iGUI.tcl 的输入设计 def 为 ./result/iPL_lg_result.def</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#===========================================================
##   read def
#===========================================================
def_init -path ./result/iPL_lg_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>step 2: 执行iEDA GUI脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA_gui <span class="token parameter variable">-script</span> ./script/iGUI_script/run_iGUI.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>step 3: 查看GUI</p><div align="center"><img src="`+a+`" style="zoom:50%;"></div><h4 id="布线-routing" tabindex="-1"><a class="header-anchor" href="#布线-routing" aria-hidden="true">#</a> 布线 （Routing）</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iRT_script/run_iRT.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code></p><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iPL_lg_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/iRT_result.def</li><li>./result/iRT_result.v</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/rt_db.rpt</li></ul><p><strong>GUI</strong><code>&lt;br&gt;</code><br> step 1：修改脚本 ./script/iGUI_script/run_iGUI.tcl 的输入设计 def 为 ./result/iRT_result.def</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#===========================================================
##   read def
#===========================================================
def_init -path ./result/iRT_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>step 2: 执行iEDA GUI脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA_gui <span class="token parameter variable">-script</span> ./script/iGUI_script/run_iGUI.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>step 3: 查看GUI</p><div align="center"><img src="`+r+`" style="zoom:50%;"></div><h4 id="单元填充-filler" tabindex="-1"><a class="header-anchor" href="#单元填充-filler" aria-hidden="true">#</a> 单元填充 （Filler）</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/iPL_script/run_iPL_filler.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code></p><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iRT_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/iPL_filler_result.def</li><li>./result/iPL_filler_result.v</li></ul><p><strong>评测和报告</strong><code>&lt;br&gt;</code></p><ul><li>./result/report/filler_db.rpt</li></ul><p><strong>GUI</strong><code>&lt;br&gt;</code><br> step 1：修改脚本 ./script/iGUI_script/run_iGUI.tcl 的输入设计 def 为 ./result/iPL_filler_result.def</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#===========================================================
##   read def
#===========================================================
def_init -path ./result/iPL_filler_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>step 2: 执行iEDA GUI脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA_gui <span class="token parameter variable">-script</span> ./script/iGUI_script/run_iGUI.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>step 3: 查看GUI</p><div align="center"><img src="`+c+`" style="zoom:50%;"></div><h4 id="def转gdsii" tabindex="-1"><a class="header-anchor" href="#def转gdsii" aria-hidden="true">#</a> DEF转GDSII</h4><p><strong>执行脚本</strong><code>&lt;br&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA <span class="token parameter variable">-script</span> ./script/DB_script/run_def_to_gds_text.tcl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数配置</strong><code>&lt;br&gt;</code></p><p><strong>输入</strong><code>&lt;br&gt;</code></p><ul><li>./result/iPL_filler_result.def</li></ul><p><strong>输出</strong><code>&lt;br&gt;</code></p><ul><li>./result/final_design.gds2</li></ul><h2 id="gui操作手册" tabindex="-1"><a class="header-anchor" href="#gui操作手册" aria-hidden="true">#</a> GUI操作手册</h2><h3 id="运行gui" tabindex="-1"><a class="header-anchor" href="#运行gui" aria-hidden="true">#</a> 运行GUI</h3><h4 id="编译构建-1" tabindex="-1"><a class="header-anchor" href="#编译构建-1" aria-hidden="true">#</a> 编译构建</h4><p>step 1: 修改可编译选项<br> 切换到iEDA工程目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 切换到工程目录 iEDA</span>
<span class="token builtin class-name">cd</span> iEDA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置顶层 CMakelist.txt 的BUILD_GUI为 ON</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 设置顶层 CMakelist.txt 的BUILD_GUI为 ON</span>
option<span class="token punctuation">(</span>BUILD_GUI <span class="token string">&quot;If ON, build GUI.&quot;</span> ON<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>step 2: 编译构建</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 通过apt安装编译依赖，需要root权限</span>
<span class="token function">sudo</span> <span class="token function">bash</span> build.sh <span class="token parameter variable">-i</span> <span class="token function">apt</span>
<span class="token comment"># 编译 iEDA</span>
<span class="token function">bash</span> build.sh <span class="token parameter variable">-j</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>step 3: 拷贝副本为 iEDA_gui</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拷贝 iEDA 到sky130 目录 </span>
<span class="token function">cp</span> ./bin/iEDA scripts/design/sky130_gcd/iEDA_gui
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置设计文件" tabindex="-1"><a class="header-anchor" href="#配置设计文件" aria-hidden="true">#</a> 配置设计文件</h4><p>修改脚本 ./script/iGUI_script/run_iGUI.tcl 的输入设计 def 为查看的设计文件， 比如修改为 ./result/iFP_result.def</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#===========================================================
##   read def
#===========================================================
def_init -path ./result/iFP_result.def
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="运行gui-1" tabindex="-1"><a class="header-anchor" href="#运行gui-1" aria-hidden="true">#</a> 运行GUI</h4><p>执行iEDA GUI脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./iEDA_gui <span class="token parameter variable">-script</span> ./script/iGUI_script/run_iGUI.tcl 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="可视化" tabindex="-1"><a class="header-anchor" href="#可视化" aria-hidden="true">#</a> 可视化</h4><p>下图为读取 ./result/iFP_result.def 设计文件的可视化结果</p><div align="center"><img src="`+t+'" style="zoom:50%;"></div><h3 id="gui操作" tabindex="-1"><a class="header-anchor" href="#gui操作" aria-hidden="true">#</a> GUI操作</h3><h4 id="tcl命令" tabindex="-1"><a class="header-anchor" href="#tcl命令" aria-hidden="true">#</a> TCL命令</h4><h4 id="gui操作-1" tabindex="-1"><a class="header-anchor" href="#gui操作-1" aria-hidden="true">#</a> GUI操作</h4><h2 id="tcl命令手册" tabindex="-1"><a class="header-anchor" href="#tcl命令手册" aria-hidden="true">#</a> TCL命令手册</h2>',288),m=[b];function f(_,x){return u(),g("div",null,m)}const E=o(v,[["render",f],["__file","guide.html.vue"]]);export{E as default};
