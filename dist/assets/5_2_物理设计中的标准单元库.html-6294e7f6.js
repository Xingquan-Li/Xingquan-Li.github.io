import{_ as r}from"./standardCellLib-25a8ea4f.js";import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as n,c as d,d as e,e as a,a as h,f as s}from"./app-1ed3f6c2.js";const c={},o=s('<p>标准单元库是现代ASIC设计流程中不可或缺的一部分，它为设计人员提供了一系列预定义的逻辑单元，可大大缩短设计时间并提高设计的可靠性和性能。在物理设计中，标准单元库起着至关重要的作用，它包含了多样的单元类型，包括具有不同驱动强度和阈值电压的单元，以及一些专用的物理单元。在本文中，我将详细介绍标准单元库的重要内容以及它们在ASIC设计中的应用。</p><h2 id="预特性化" tabindex="-1"><a class="header-anchor" href="#预特性化" aria-hidden="true">#</a> 预特性化：</h2><p>首先，让我们了解一下标准单元库的预特性化过程。在将单元纳入标准单元库之前，它们要经历一系列严格的设计流程。这个过程包括原理图设计、仿真验证、符号创建、布局设计（遵循标准单元布局规则）、物理验证、抽象、提取和特性化。通过这些步骤，设计人员能够确保标准单元在功能和性能方面都是可靠的，并且符合各种物理设计规则，以便在后续的自动布局和布线（APR）过程中能够顺利使用。</p><h2 id="多驱动强度单元" tabindex="-1"><a class="header-anchor" href="#多驱动强度单元" aria-hidden="true">#</a> 多驱动强度单元：</h2><p>标准单元库中的一个重要概念是多驱动强度单元。不同的单元具有不同的驱动强度，这直接影响着设计的功耗、面积和时序性能。低驱动强度单元通常具有较低的功耗和面积要求，但会导致更高的延迟和转换时间。相反，高驱动强度单元可以驱动更多的单元且具有更快的转换速度，但会消耗更多的功耗和面积。因此，PnR设计工程师在设计过程中需要根据具体要求选择适当的驱动强度，以平衡设计的功耗、面积和性能。</p><h2 id="多阈值电压-vt-单元" tabindex="-1"><a class="header-anchor" href="#多阈值电压-vt-单元" aria-hidden="true">#</a> 多阈值电压 [Vt] 单元：</h2><p>标准单元库还包括多阈值电压（Vt）单元。Vt单元是针对不同功耗和时序要求而设计的。低阈值电压（LVT）单元具有较短的延迟，但会产生较高的漏电功耗。与之相对应的是高阈值电压（HVT）单元，它们具有较低的漏电功耗，但会导致更高的延迟。根据设计的时序和功耗需求，PnR工程师可以在标准单元库中选择适当的Vt单元，以在功耗和时序之间取得平衡。现代的标准单元库通常包含ULVT、LVT、SVT、HVT等类型的单元，按照阈值电压的增加顺序排列。</p><h2 id="物理单元" tabindex="-1"><a class="header-anchor" href="#物理单元" aria-hidden="true">#</a> 物理单元：</h2><p>除了逻辑单元，标准单元库中还包括一些专门用于物理设计的单元。这些物理单元并没有逻辑功能，而是用于缓解各种影响和制造问题。例如，为了克服锁存器的锁存现象，我们需要添加井接触单元。此外，还有Decap单元、endcap单元、天线单元和填充单元等专用单元，它们在物理设计过程中起到了关键的作用。</p><div style="text-align:center;"><img src="'+r+'" alt="ASIC Flow" width="300"></div><h2 id="单元集合" tabindex="-1"><a class="header-anchor" href="#单元集合" aria-hidden="true">#</a> 单元集合：</h2><p>通过标准单元库，设计人员可以通过选择和使用已经预定义、经过验证和特性化的标准单元，大大简化和加快ASIC设计流程。标准单元库涵盖了各种逻辑和物理单元，包括基本门（如AND、OR、NOT等）、复杂门（如MUX、HA、FA、比较器等）、时钟树单元（如时钟缓冲器、时钟反相器、ICG单元等）、触发器、锁存器、延迟单元、物理单元和可扫描触发器等。一般来说，标准单元库包含以下类型的单元：</p><ul><li>所有基本和通用门（如AND、OR、NOT、NAND、NOR、XOR等）</li><li>复杂门（如MUX、HA、FA、比较器、AOI、OAI等）</li><li>时钟树单元（如时钟缓冲器、时钟反相器、ICG单元等）</li><li>触发器和锁存器</li><li>延迟单元</li><li>物理单元</li><li>可扫描触发器</li></ul><h2 id="文件集合" tabindex="-1"><a class="header-anchor" href="#文件集合" aria-hidden="true">#</a> 文件集合：</h2><p>此外，标准单元库还涵盖了一系列与自动布局和布线相关的文件集合。这些文件包括LIB文件、LEF文件、网表文件、GDS文件、SPICE网表和模型文件。LIB文件是时序库，包含单元的延迟、功耗和面积信息，用于后续的时序分析和优化。LEF文件是物理库文件，它提供了单元布局的抽象视图，包括单元的边界、引脚、位置、方向以及金属层信息。网表文件是标准单元的Verilog文件，用于描述单元的功能。GDS文件是标准单元的物理布局文件，用于实际的芯片制造。SPICE网表是一种用于电路仿真的格式，用于验证设计的功能和特性。模型文件包含单元的各种设计参数，可用于SPICE仿真。这些文件主要包括：</p><ul><li>LIB文件（.lib）</li><li>LEF文件（.lef）</li><li>网表文件（.v）</li><li>GDS文件（.gds）</li><li>SPICE网表（.sp）</li><li>模型文件（.m）</li></ul><p>这里提到的所有文件格式均参考了Cadence工具。在Synopsys工具中，某些文件格式不同，但文件内的信息相同。这些文件的简要信息在本博客的“VLSI文件”部分中给出。详细信息可以在该部分找到。</p><p>时序库（LIB或DB）文件是在单元特性化期间生成的。库文件包含单元延迟、功率和面积信息。物理库（LEF）文件是单元布局的抽象视图。LEF文件包含单元边界、单元内的引脚、位置、方向和每个引脚的金属层信息。网表文件是标准单元的Verilog文件，定义单元的功能。GDS文件是标准单元的布局。SPICE网表是SPICE格式中单元的网表，用于仿真。模型文件包含单元所需的各种设计参数，用于SPICE仿真。</p><p>在总体上，标准单元库在现代ASIC设计中扮演着至关重要的角色。它提供了丰富多样的预定义逻辑单元，使得设计人员能够快速、高效地完成设计。通过选择适当的驱动强度和阈值电压单元，设计人员可以在面积、功耗和性能之间找到最佳平衡点。此外，物理单元和相应的文件集合确保了设计的可靠性和可制造性。</p><p>希望通过本文的介绍，读者对于标准单元库的重要性和应用有了更深入的了解。在实际的ASIC设计中，合理地选择和使用标准单元库将是取得成功的关键之一。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',21),p={href:"https://teamvlsi.com/2020/08/standard-cell-library-in-asic-design.html",target:"_blank",rel:"noopener noreferrer"};function _(I,m){const i=t("ExternalLinkIcon");return n(),d("div",null,[o,e("p",null,[a("原文链接："),e("a",p,[a("https://teamvlsi.com/2020/08/standard-cell-library-in-asic-design.html"),h(i)])])])}const C=l(c,[["render",_],["__file","5_2_物理设计中的标准单元库.html.vue"]]);export{C as default};
